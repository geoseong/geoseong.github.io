{"version":3,"sources":["webpack:///./src/blogposts/pagelist.js","webpack:///./src/components/MetaInfo.js","webpack:///./util/convert.js"],"names":["inlineStyle","titleArea","marginBottom","spaceHorizontal","margin","listBtn","textAlign","IndexPage","contentRef","React","createRef","gistRef","gistId","gistFile","gistIframeId","state","componentDidMount","_this","doc","iframeDom","current","querySelector","contentDocument","contentWindow","document","iframeHtml","_updateIframeContent","id","file","domId","open","writeln","close","_defineUrl","_ref","replace","_ref2","getMarkup","htmlTagCovered","bodyTag","cheerio","load","$","find","attr","children","removeAttr","css","parent","addClass","gistUrl","length","split","gistInfo","replaceWith","getHtmlTagCovered","pageContext","htmlTag","page","html","render","this","props","content","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","type","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_10__","title","description","locationAfterOrigin","routing","twittercard","keywords","notebook","section","join","modifiedDt","lastModifiedTime","createdDt","createdTime","style","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","toLowerCase","parentSection","getFormmatedDt","datetime","dangerouslySetInnerHTML","__html","ref","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","domain","MetaInfo","metaDescDom","openDescDom","twitDescDom","recurCnt","Math","floor","i","push","key","name","substring","Fragment","httpEquiv","property","rel","href","d","__webpack_exports__","formattedDtBefore","set2Length","val","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"sNASMA,EAAc,CAClBC,UAAW,CACTC,aAAc,QAEhBC,gBAAiB,CACfC,OAAQ,WAEVC,QAAS,CACPC,UAAW,QACXF,OAAQ,WAGNG,sJACJC,WAAaC,IAAMC,cACnBC,QAAUF,IAAMC,cAChBE,OAAS,KACTC,SAAW,OACXC,aAAe,KACfC,MAAQ,KAERC,kBAAoB,WAClB,GAAKC,EAAKL,OAAV,CAGA,IAEIM,EADAC,EADMF,EAAKT,WACKY,QAAQC,cAAZ,IAA8BJ,EAAKH,cAE/CK,EAAUG,gBACZJ,EAAMC,EAAUG,gBACPH,EAAUI,gBACnBL,EAAMC,EAAUI,cAAcC,UAEhC,IAAMC,EAAaR,EAAKS,qBAAqB,CAC3CC,GAAIV,EAAKL,OACTgB,KAAMX,EAAKJ,SACXgB,MAAOZ,EAAKH,eAEdI,EAAIY,OACJZ,EAAIa,QAAQN,GACZP,EAAIc,YAINC,WAAa,SAAAC,GAAkB,IAAfP,EAAeO,EAAfP,GAAIC,EAAWM,EAAXN,KAElB,MAAO,2BAA6BD,EAAK,OAD3BC,EAAO,SAAWA,EAAO,IACkBO,QAAQ,IAAK,QAIxET,qBAAuB,SAAAU,GAAyB,IAAtBT,EAAsBS,EAAtBT,GAAIC,EAAkBQ,EAAlBR,KAmB5B,MAPE,qFAJA,4CAR4CQ,EAAZP,MAUhC,4DAMA,KAbA,uCAFaZ,EAAKgB,WAAW,CAAEN,KAAIC,SAEiB,gBAepD,oBAIJS,UAAY,SAAAC,GAEV,IAEMC,EAFIC,IAAQC,KAAKH,EAEPI,CAAE,QAElBH,EAAQI,KAAK,KAAKC,KAAK,SAAU,UAEjCL,EAAQM,SAAS,OAAOC,WAAW,SAEnCP,EAAQI,KAAK,KAAKI,IAAI,eAAgB,UACtCR,EAAQI,KAAK,SAASI,IAAI,cAAe,UAEzCR,EACGI,KAAK,8BACLK,OAAO,KACPC,SAAS,gBAEZ,IACIC,EADUX,EAAQI,KAAK,8BAEjBQ,OAAS,GACjBZ,EACGI,KAAK,8BACLC,KAAK,QACLQ,MAAM,KAEX,GAAIF,EAAS,CACX,IAAIG,EAAWH,EAAQA,EAAQC,OAAS,GAAGC,MAAM,UAC7CxC,EAASyC,EAAS,GAClBxC,EAAWwC,EAASF,OAAS,GAAKE,EAAS,GACzCvC,EAAeD,EAAQ,QACjBD,EADiB,IACPC,EADO,QAEjBD,EACZK,EAAKL,OAASA,EACdK,EAAKJ,SAAWA,EAChBI,EAAKH,aAAeA,EACpByB,EACGI,KAAK,8BACLW,YAFH,eAGmBxC,EAHnB,gDAOF,OAAOyB,KAGTgB,kBAAoB,SAAAC,GAClB,IAAIC,EAAUD,EAAYE,KAAKC,KAC/B,OAAO1C,EAAKoB,UAAUoB,kCAGxBG,kBAAS,IAEIJ,EACPK,KADFC,MAASN,YAILO,EAAUP,EAAYE,KAAKK,QAAQ5B,QAAQ,MAAO,IAExD,OACE6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,KAAK,QACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,MAAOd,EAAYE,KAAKY,MACxBC,YAAaR,EACbK,KAAK,UACLI,oBAAqBC,EAAQjB,EAAYE,KAAK/B,IAC9C+C,YAAY,UACZC,SACKnB,EAAYoB,SAAf,IACEpB,EAAYqB,QADd,sBAEwBrB,EAAYE,KAAKY,MAAMlB,MAAM,KAAK0B,KAAK,KAEjEC,WAAYvB,EAAYE,KAAKsB,iBAC7BC,UAAWzB,EAAYE,KAAKwB,cAE9BlB,EAAAC,EAAAC,cAAA,OAAKiB,MAAOnF,EAAYC,WACtB+D,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,cAAc5B,EAAYE,KAAKY,OAC7CN,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,aACbpB,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CACED,UAAU,gBACVE,GAAI9B,EAAYoB,SAASW,eAEzBvB,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,IAAI5B,EAAYoB,WAElCZ,EAAAC,EAAAC,cAAA,QACEkB,UAAU,4BACVD,MAAOnF,EAAYG,kBAErB6D,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CACED,UAAU,gBACVE,GAAIb,EAAQjB,EAAYE,KAAK8B,cAAc7D,KAE3CqC,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,IAAI5B,EAAYqB,WAGpCb,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,cACXK,YAAejC,EAAYE,KAAKsB,kBAAkBU,WAGvD1B,EAAAC,EAAAC,cAAA,OACEkB,UAAU,wBACVO,wBAAyB,CACvBC,OAAQ/B,KAAKN,kBAAkBC,IAEjCqC,IAAKhC,KAAKrD,aAEZwD,EAAAC,EAAAC,cAAA,OAAKiB,MAAOnF,EAAYK,SACtB2D,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,GAAIb,EAAQjB,EAAYE,KAAK8B,cAAc7D,KAC/CqC,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASgB,UAAU,qBAAhC,eAvKYU,aAiLTvF,8CCtMf,IAAAwF,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAyBME,EAAS,8BA6EAC,IA1EE,SAAAxC,GACf,IACIyC,EAAc,GACdC,EAAc,GACdC,EAAc,GAClB,GAAI3C,EAAMS,aAAeT,EAAMS,YAAYpB,OAJjB,IAMxB,IADA,IAAMuD,EAAWC,KAAKC,MAAM9C,EAAMS,YAAYpB,OALtB,KAMf0D,EAAI,EAAGA,EAAIH,EAAUG,IAC5BN,EAAYO,KACVb,EAAAhC,EAAAC,cAAA,QACE6C,IAAK,QAAUF,EACfG,KAAK,cACLjD,QAASD,EAAMS,YAAY0C,UAXT,IAYhBJ,EAZgB,IAahBA,EAbgB,QAiBtBL,EAAYM,KACVb,EAAAhC,EAAAC,cAAA,QACE6C,IAAK,UAAYF,EACjBG,KAAK,iBACLjD,QAASD,EAAMS,YAAY0C,UArBT,IAsBhBJ,EAtBgB,IAuBhBA,EAvBgB,QA2BtBJ,EAAYK,KACVb,EAAAhC,EAAAC,cAAA,QACE6C,IAAK,YAAcF,EACnBG,KAAK,sBACLjD,QAASD,EAAMS,YAAY0C,UA/BT,IAgChBJ,EAhCgB,IAiChBA,EAjCgB,QAuC1B,OACEZ,EAAAhC,EAAAC,cAAC+B,EAAAhC,EAAMiD,SAAP,KACEjB,EAAAhC,EAAAC,cAACkC,EAAAnC,EAAD,KACEgC,EAAAhC,EAAAC,cAAA,aAAQJ,EAAMQ,MAAQ,0BAEtB2B,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,iBAAiBjD,QAAS,aACrCkC,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,yBAAyBjD,QAASD,EAAMmB,YACnDgB,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,wBAAwBjD,QAASD,EAAMiB,aAClDkB,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,OAAOjD,QAASD,EAAMiB,aACjCkB,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,gBAAgBjD,QAASD,EAAMiB,aAC1CkB,EAAAhC,EAAAC,cAAA,QAAMiD,UAAU,gBAAgBpD,QAASD,EAAMiB,aAE/CkB,EAAAhC,EAAAC,cAAA,QAAMkD,SAAS,WAAWrD,QAASD,EAAMQ,QAExCkC,EACDP,EAAAhC,EAAAC,cAAA,QAAMkD,SAAS,SAASrD,QAASsC,EAASvC,EAAMU,sBAChDyB,EAAAhC,EAAAC,cAAA,QAAMkD,SAAS,WAAWrD,QAzDjB,KA2DTkC,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,gBAAgBjD,QAASD,EAAMQ,QAEzCmC,EACDR,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,eAAejD,QAASD,EAAMY,cACzCuB,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,iBAAiBjD,QAASsC,IACrCJ,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,cAAcjD,QAASsC,EAASvC,EAAMU,sBAEhD+B,EAEDN,EAAAhC,EAAAC,cAAA,QAAM8C,KAAK,WAAWjD,QAASD,EAAMa,WAErCsB,EAAAhC,EAAAC,cAAA,QAAMmD,IAAI,YAAYC,KAAMjB,EAAS,2CCjG7CL,EAAAuB,EAAAC,EAAA,sBAAA/B,IAAA,IAAMA,EAAiB,SAACgC,GACtB,IAAIC,EAAa,SAACC,GAAS,OAAQA,EAAI,GAAI,IAAMA,EAAIA,GACjDC,EAAO,IAAIC,KAAKJ,GAIpB,MAAO,CAAC/B,SAHwBkC,EAAKE,cAAX,IAA4BJ,EAAWE,EAAKG,WAAW,GAAvD,IAA6DL,EAAWE,EAAKI,WAA7E,IAA2FN,EAAWE,EAAKK,YAA3G,IAA0HP,EAAWE,EAAKM,cAG1HN,KAFdA,EAAKE,cAAX,IAA4BJ,EAAWE,EAAKG,WAAW,GAAvD,IAA6DL,EAAWE,EAAKI","file":"component---src-blogposts-pagelist-js-48eb421411e4de6e3861.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport cheerio from 'cheerio'\n// import Gist from 'react-gist'\nimport Layout from '../components/Layout'\nimport routing from '../../postings/routings.json'\nimport { getFormmatedDt } from '../../util/convert'\nimport MetaInfo from '../components/MetaInfo'\n\nconst inlineStyle = {\n  titleArea: {\n    marginBottom: '2rem',\n  },\n  spaceHorizontal: {\n    margin: '0 .5rem',\n  },\n  listBtn: {\n    textAlign: 'right',\n    margin: '1rem 0',\n  },\n}\nclass IndexPage extends Component {\n  contentRef = React.createRef()\n  gistRef = React.createRef()\n  gistId = ''\n  gistFile = null\n  gistIframeId = ''\n  state = {}\n\n  componentDidMount = () => {\n    if (!this.gistId) {\n      return\n    }\n    let ref = this.contentRef\n    let iframeDom = ref.current.querySelector(`#${this.gistIframeId}`)\n    let doc\n    if (iframeDom.contentDocument) {\n      doc = iframeDom.contentDocument\n    } else if (iframeDom.contentWindow) {\n      doc = iframeDom.contentWindow.document\n    }\n    const iframeHtml = this._updateIframeContent({\n      id: this.gistId,\n      file: this.gistFile,\n      domId: this.gistIframeId,\n    })\n    doc.open()\n    doc.writeln(iframeHtml)\n    doc.close()\n  }\n\n  /* thanks to: https://github.com/tleunen/react-gist */\n  _defineUrl = ({ id, file }) => {\n    let fileArg = file ? '?file=' + file : ''\n    return 'https://gist.github.com/' + id + '.js' + fileArg.replace('-', '.')\n  }\n\n  /* thanks to: https://github.com/tleunen/react-gist */\n  _updateIframeContent = ({ id, file, domId }) => {\n    let gistLink = this._defineUrl({ id, file })\n    let gistScript =\n      '<script type=\"text/javascript\" src=\"' + gistLink + '\"></script>'\n    let styles = '<style>*{font-size:12px;}</style>'\n    let elementId = domId\n    // let elementId = file ? 'gist-' + id + '-' + file : 'gist-' + id\n    let resizeScript =\n      'onload=\"parent.document.getElementById(\\'' +\n      elementId +\n      \"').style.height=document.body.scrollHeight + 10 + 'px'\\\"\"\n    let iframeHtml =\n      '<html><head><base target=\"_parent\">' +\n      styles +\n      '</head><body ' +\n      resizeScript +\n      '>' +\n      gistScript +\n      '</body></html>'\n    return iframeHtml\n  }\n\n  getMarkup = htmlTagCovered => {\n    /* OneNote 페이지의 전체 DOM */\n    const $ = cheerio.load(htmlTagCovered)\n    /* body 태그 */\n    const bodyTag = $('body')\n    /* a태그는 target=\"_blank\" attr을 부여하기 */\n    bodyTag.find('a').attr('target', '_blank')\n    /* body 태그 바로 밑의 div의 스타일 attr 없애기 */\n    bodyTag.children('div').removeAttr('style')\n    /* spacing 적용하기 */\n    bodyTag.find('p').css('padding-left', '1.5rem')\n    bodyTag.find('table').css('margin-left', '1.5rem')\n    /* #gist -> iframe */\n    bodyTag\n      .find('a[href*=\"gist.github.com\"]')\n      .parent('p')\n      .addClass('gist-wrapper')\n\n    let gistDom = bodyTag.find('a[href*=\"gist.github.com\"]')\n    let gistUrl =\n      gistDom.length > 0 &&\n      bodyTag\n        .find('a[href*=\"gist.github.com\"]')\n        .attr('href')\n        .split('/')\n\n    if (gistUrl) {\n      let gistInfo = gistUrl[gistUrl.length - 1].split('#file-')\n      let gistId = gistInfo[0]\n      let gistFile = gistInfo.length > 1 && gistInfo[1]\n      const gistIframeId = gistFile\n        ? `gist-${gistId}-${gistFile}`\n        : `gist-${gistId}`\n      this.gistId = gistId\n      this.gistFile = gistFile\n      this.gistIframeId = gistIframeId\n      bodyTag\n        .find('a[href*=\"gist.github.com\"]')\n        .replaceWith(\n          `<iframe id=\"${gistIframeId}\" width=\"100%\" style=\"border-style: none;\"/>`\n        )\n    }\n\n    return bodyTag\n  }\n\n  getHtmlTagCovered = pageContext => {\n    let htmlTag = pageContext.page.html\n    return this.getMarkup(htmlTag)\n  }\n\n  render() {\n    const {\n      props: { pageContext },\n    } = this\n\n    /* html태그가 없는 내용 */\n    const content = pageContext.page.content.replace(/  /g, '')\n\n    return (\n      <Layout type=\"blog\">\n        <MetaInfo\n          title={pageContext.page.title}\n          description={content}\n          type=\"website\"\n          locationAfterOrigin={routing[pageContext.page.id]}\n          twittercard=\"summary\"\n          keywords={\n            `${pageContext.notebook},${\n              pageContext.section\n            },geoseong,dev note,` + pageContext.page.title.split(' ').join(',')\n          }\n          modifiedDt={pageContext.page.lastModifiedTime}\n          createdDt={pageContext.page.createdTime}\n        />\n        <div style={inlineStyle.titleArea}>\n          <h1 className=\"text-light\">{pageContext.page.title}</h1>\n          <div className=\"text-info\">\n            <Link\n              className=\"text-info btn\"\n              to={pageContext.notebook.toLowerCase()}\n            >\n              <span className=\"\">{pageContext.notebook}</span>\n            </Link>\n            <span\n              className=\"fas fa-angle-double-right\"\n              style={inlineStyle.spaceHorizontal}\n            />\n            <Link\n              className=\"text-info btn\"\n              to={routing[pageContext.page.parentSection.id]}\n            >\n              <span className=\"\">{pageContext.section}</span>\n            </Link>\n          </div>\n          <h6 className=\"text-right\">\n            {getFormmatedDt(pageContext.page.lastModifiedTime).datetime}\n          </h6>\n        </div>\n        <div\n          className=\"geoseong-page-content\"\n          dangerouslySetInnerHTML={{\n            __html: this.getHtmlTagCovered(pageContext),\n          }}\n          ref={this.contentRef}\n        />\n        <div style={inlineStyle.listBtn}>\n          <Link to={routing[pageContext.page.parentSection.id]}>\n            <button type=\"button\" className=\"btn btn-secondary\">\n              목록으로\n            </button>\n          </Link>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo\n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst domain = 'https://geoseong.github.io/'\nconst pageTitle = \"Geoseong's dev note\"\nconst mainIcon = ''\nconst MetaInfo = props => {\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (props.description && props.description.length > descriptionLength) {\n    const recurCnt = Math.floor(props.description.length / descriptionLength)\n    for (let i = 0; i < recurCnt; i++) {\n      metaDescDom.push(\n        <meta\n          key={'desc-' + i}\n          name=\"description\"\n          content={props.description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      openDescDom.push(\n        <meta\n          key={'ogdesc-' + i}\n          name=\"og:description\"\n          content={props.description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      twitDescDom.push(\n        <meta\n          key={'twitdesc-' + i}\n          name=\"twitter:description\"\n          content={props.description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n    }\n  }\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{props.title + ' : ' + pageTitle}</title>\n        {/* Last Modified */}\n        <meta name=\"article:author\" content={'geoseong'} />\n        <meta name=\"article:published_time\" content={props.createdDt} />\n        <meta name=\"article:modified_time\" content={props.modifiedDt} />\n        <meta name=\"date\" content={props.modifiedDt} />\n        <meta name=\"last-modified\" content={props.modifiedDt} />\n        <meta httpEquiv=\"last-modified\" content={props.modifiedDt} />\n        {/* open graph */}\n        <meta property=\"og:title\" content={props.title} />\n        {/* og:description */}\n        {openDescDom}\n        <meta property=\"og:url\" content={domain + props.locationAfterOrigin} />\n        <meta property=\"og:image\" content={mainIcon} />\n        {/* twitter card */}\n        <meta name=\"twitter:title\" content={props.title} />\n        {/* twitter:description */}\n        {twitDescDom}\n        <meta name=\"twitter:card\" content={props.twittercard} />\n        <meta name=\"twitter:domain\" content={domain} />\n        <meta name=\"twitter:url\" content={domain + props.locationAfterOrigin} />\n        {/* description(required) */}\n        {metaDescDom}\n        {/* keyword */}\n        <meta name=\"keywords\" content={props.keywords} />\n        {/* canonical */}\n        <link rel=\"canonical\" href={domain + '/'} />\n      </Helmet>\n    </React.Fragment>\n  )\n}\nexport default MetaInfo\n","const getFormmatedDt = (formattedDtBefore) => {\n  let set2Length = (val) => {return (val<10)?\"0\" + val:val;}\n  let date = new Date(formattedDtBefore);\n  let formattedDatetimeAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())} ${set2Length(date.getHours())}:${set2Length(date.getMinutes())}`;\n  let formattedDateAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())}`;\n  \n  return {datetime: formattedDatetimeAfter, date: formattedDateAfter};\n}\n\nexport {\n  getFormmatedDt\n}"],"sourceRoot":""}