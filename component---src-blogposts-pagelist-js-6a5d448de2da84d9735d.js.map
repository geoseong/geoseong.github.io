{"version":3,"sources":["webpack:///./src/blogposts/pagelist.js","webpack:///./src/components/MetaInfo.js","webpack:///./util/convert.js"],"names":["inlineStyle","titleArea","marginBottom","spaceHorizontal","margin","listBtn","textAlign","IndexPage","contentRef","React","createRef","gistObjs","state","componentDidMount","_this","execGitGist","initUtterances","utterancesConfig","src","repo","async","theme","label","issue-term","crossorigin","utterances","document","createElement","commentBox","querySelector","Object","keys","forEach","configKey","setAttribute","insertAdjacentElement","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7___default","length","i","_gistObjs$i","gistId","gistFile","gistIframeId","iframeDom","current","doc","contentDocument","contentWindow","iframeHtml","_updateIframeContent","id","file","domId","open","writeln","close","_ref","_ref2","replace","defineUrl","setGistMarkup","htmlTagCovered","bodyTag","cheerio","load","$","find","attr","children","removeAttr","css","parent","addClass","inlineStyleH1","inlineStyleH2","inlineStyleH3","gistDom","href","attribs","splittedHref","split","gistInfo","push","replaceWith","getHtmlTagCovered","pageContext","htmlTag","page","html","render","this","props","content","react__WEBPACK_IMPORTED_MODULE_9___default","a","_components_Layout__WEBPACK_IMPORTED_MODULE_13__","type","ad","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_16__","title","description","locationAfterOrigin","routing","twittercard","keywords","notebook","section","join","modifiedDt","lastModifiedTime","createdDt","createdTime","react_adsense__WEBPACK_IMPORTED_MODULE_12___default","Google","className","client","slot","style","gatsby__WEBPACK_IMPORTED_MODULE_10__","to","toLowerCase","parentSection","getFormmatedDt","datetime","dangerouslySetInnerHTML","__html","ref","display","layout","format","Component","MetaInfo","ogImage","metaDescDom","openDescDom","twitDescDom","recurCnt","Math","floor","react__WEBPACK_IMPORTED_MODULE_1___default","key","name","substring","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","siteUrl","defaultDescription","defaultImage","defaultOgImage","twitterUsername","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","httpEquiv","property","rel","data","_public_static_d_3468742975_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","formattedDtBefore","set2Length","val","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"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","file":"component---src-blogposts-pagelist-js-6a5d448de2da84d9735d.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport cheerio from 'cheerio'\n// import Gist from 'react-gist'\nimport AdSense from 'react-adsense' // https://git.hust.cc/react-adsense/\nimport Layout from '../components/Layout'\nimport routing from '../../postings/routings.json'\nimport { getFormmatedDt } from '../../util/convert'\nimport MetaInfo from '../components/MetaInfo'\n\nconst inlineStyle = {\n  titleArea: {\n    marginBottom: '2rem',\n  },\n  spaceHorizontal: {\n    margin: '0 .5rem',\n  },\n  listBtn: {\n    textAlign: 'right',\n    margin: '1rem 0',\n  },\n}\nclass IndexPage extends Component {\n  contentRef = React.createRef()\n  gistObjs = []\n  state = {\n    // onLoadUtt: false,\n  }\n\n  componentDidMount = () => {\n    this.execGitGist()\n    this.initUtterances()\n  }\n\n  initUtterances = () => {\n    // https://github.com/adhrinae/gatsby-blog-template-rinae/blob/5b22ca6b72e2ecb447e0e90e4a91e698fbf87271/src/templates/Post.js\n    // TODO: utterances로 댓글 남길 때 issue보드 내용에 본문 내용과 endpoint찍히는 게 이상한데, 한번 살펴봐야 할 듯.\n    const utterancesConfig = {\n      src: 'https://utteranc.es/client.js',\n      repo: 'geoseong/geoseong.github.io',\n      // branch: 'master',\n      async: true,\n      theme: 'icy-dark',\n      label: 'comment',\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    }\n    const utterances = document.createElement('script')\n    const commentBox = document.querySelector('.commentbox')\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    commentBox.insertAdjacentElement('afterend', utterances)\n    // this.setState({\n    //   onLoadUtt: true,\n    // })\n  }\n\n  execGitGist = () => {\n    // let { gistId, gistFile, gistObjs } = this\n    let { gistObjs } = this\n    if (!gistObjs || gistObjs.length === 0) {\n      return\n    }\n    for (let i = 0; i < gistObjs.length; i++) {\n      let { gistId, gistFile, gistIframeId } = gistObjs[i]\n      let ref = this.contentRef\n      let iframeDom = ref.current.querySelector(`#${gistIframeId}`)\n      let doc\n      if (iframeDom.contentDocument) {\n        doc = iframeDom.contentDocument\n      } else if (iframeDom.contentWindow) {\n        doc = iframeDom.contentWindow.document\n      }\n      if (!iframeDom.contentDocument && !iframeDom.contentWindow) {\n        /* draft */\n      }\n      const iframeHtml = this._updateIframeContent({\n        id: gistId,\n        file: gistFile,\n        domId: gistIframeId,\n      })\n      doc.open()\n      doc.writeln(iframeHtml)\n      doc.close()\n    }\n  }\n\n  /* thanks to: https://github.com/tleunen/react-gist */\n  _updateIframeContent = ({ id, file, domId }) => {\n    /* thanks to: https://github.com/tleunen/react-gist */\n    const defineUrl = ({ id, file }) => {\n      let fileArg = file ? '?file=' + file : ''\n      return 'https://gist.github.com/' + id + '.js' + fileArg.replace('-', '.')\n    }\n    let gistLink = defineUrl({ id, file })\n    let gistScript =\n      '<script type=\"text/javascript\" src=\"' + gistLink + '\"></script>'\n    let styles = '<style>*{font-size:12px;}</style>'\n    let elementId = domId\n    // let elementId = file ? 'gist-' + id + '-' + file : 'gist-' + id\n    let resizeScript =\n      'onload=\"parent.document.getElementById(\\'' +\n      elementId +\n      \"').style.height=document.body.scrollHeight + 10 + 'px'\\\"\"\n    let iframeHtml =\n      '<html><head><base target=\"_parent\">' +\n      styles +\n      '</head><body ' +\n      resizeScript +\n      '>' +\n      gistScript +\n      '</body></html>'\n    return iframeHtml\n  }\n\n  setGistMarkup = htmlTagCovered => {\n    /* OneNote 페이지의 전체 DOM */\n    const $ = cheerio.load(htmlTagCovered)\n    /* body 태그 */\n    const bodyTag = $('body')\n    /* a태그는 target=\"_blank\" attr을 부여하기 */\n    bodyTag.find('a').attr('target', '_blank')\n    /* body 태그 바로 밑의 div의 스타일 attr 없애기 */\n    bodyTag.children('div').removeAttr('style')\n    /* spacing 적용하기 */\n    bodyTag.find('p').css('padding-left', '1.5rem')\n    bodyTag.find('table').css('margin-left', '1.5rem')\n    /* #gist -> iframe */\n    bodyTag\n      .find('a[href*=\"gist.github.com\"]')\n      .parent('p')\n      .addClass('gist-wrapper')\n    /* h태그의 style 중 font-size 발라내기 */\n    let inlineStyleH1 = bodyTag.find('h1').attr('style')\n    let inlineStyleH2 = bodyTag.find('h2').attr('style')\n    let inlineStyleH3 = bodyTag.find('h3').attr('style')\n    if (inlineStyleH1) {\n      bodyTag\n        .find('h1')\n        .attr('style', inlineStyleH1.replace(/font-size:\\d+pt;/g, ''))\n    }\n    if (inlineStyleH2) {\n      bodyTag\n        .find('h2')\n        .attr('style', inlineStyleH2.replace(/font-size:\\d+pt;/g, ''))\n    }\n    if (inlineStyleH3) {\n      bodyTag\n        .find('h3')\n        .attr('style', inlineStyleH3.replace(/font-size:\\d+pt;/g, ''))\n    }\n\n    let gistDom = bodyTag.find('a[href*=\"gist.github.com\"]')\n    for (let i = 0; i < gistDom.length; i++) {\n      let {\n        attribs: { href },\n      } = gistDom[i]\n      let splittedHref = href.split('/')\n      let gistInfo = splittedHref[splittedHref.length - 1].split('#file-')\n      let gistId = gistInfo[0]\n      let gistFile = gistInfo.length > 1 && gistInfo[1]\n      let gistIframeId = gistFile\n        ? `gist-${gistId}-${gistFile}`\n        : `gist-${gistId}`\n      this.gistObjs.push({\n        gistId,\n        gistFile,\n        gistIframeId,\n      })\n      bodyTag\n        .find(`a[href=\"${href}\"]`)\n        .replaceWith(\n          `<iframe id=\"${gistIframeId}\" width=\"100%\" style=\"border-style: none;\"/>`\n        )\n    }\n    return bodyTag\n  }\n\n  getHtmlTagCovered = pageContext => {\n    let htmlTag = pageContext.page.html\n    return this.setGistMarkup(htmlTag)\n  }\n\n  render() {\n    const {\n      props: { pageContext },\n      // state: { onLoadUtt },\n    } = this\n\n    /* html태그가 없는 내용 */\n    const content = pageContext.page.content.replace(/  /g, '')\n\n    return (\n      <Layout type=\"blog\" ad={true}>\n        <MetaInfo\n          title={pageContext.page.title}\n          description={content}\n          type=\"website\"\n          locationAfterOrigin={routing[pageContext.page.id]}\n          twittercard=\"summary\"\n          keywords={\n            `${pageContext.notebook},${\n              pageContext.section\n            },geoseong,dev note,` + pageContext.page.title.split(' ').join(',')\n          }\n          modifiedDt={pageContext.page.lastModifiedTime}\n          createdDt={pageContext.page.createdTime}\n        />\n        <AdSense.Google\n          className=\"m-3\"\n          client=\"ca-pub-4861235624374871\"\n          slot=\"1484266709\"\n        />\n        <div style={inlineStyle.titleArea}>\n          <h1 className=\"text-light\">{pageContext.page.title}</h1>\n          <div className=\"text-info\">\n            <Link\n              className=\"text-info btn\"\n              to={`/${pageContext.notebook.toLowerCase()}`}\n            >\n              <span className=\"\">{pageContext.notebook}</span>\n            </Link>\n            <span\n              className=\"fas fa-angle-double-right\"\n              style={inlineStyle.spaceHorizontal}\n            />\n            <Link\n              className=\"text-info btn\"\n              to={`/${routing[pageContext.page.parentSection.id]}`}\n            >\n              <span className=\"\">{pageContext.section}</span>\n            </Link>\n          </div>\n          <h6 className=\"text-right\">\n            {getFormmatedDt(pageContext.page.lastModifiedTime).datetime}\n          </h6>\n        </div>\n        <div\n          className=\"geoseong-page-content\"\n          dangerouslySetInnerHTML={{\n            __html: this.getHtmlTagCovered(pageContext),\n          }}\n          ref={this.contentRef}\n        />\n        <AdSense.Google\n          className=\"m-3\"\n          client=\"ca-pub-4861235624374871\"\n          slot=\"1484266709\"\n          style={{ display: 'block' }}\n          layout=\"in-article\"\n          format=\"fluid\"\n        />\n        {/* utterances */}\n        <div className=\"commentbox mt-5\" />\n        {/* {!onLoadUtt && (\n          <div className=\"comment-loading bg-dark p-3 rounded\">\n            댓글 로딩 중...\n          </div>\n        )} */}\n        <div style={inlineStyle.listBtn}>\n          <Link to={`/${routing[pageContext.page.parentSection.id]}`}>\n            <button type=\"button\" className=\"btn btn-secondary\">\n              목록으로\n            </button>\n          </Link>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo\n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test/\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst MetaInfo = ({\n  description,\n  title,\n  createdDt,\n  modifiedDt,\n  locationAfterOrigin,\n  twittercard,\n  keywords,\n  ogImage,\n}) => {\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (description && description.length > descriptionLength) {\n    const recurCnt = Math.floor(description.length / descriptionLength)\n    for (let i = 0; i < recurCnt; i++) {\n      metaDescDom.push(\n        <meta\n          key={'desc-' + i}\n          name=\"description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      openDescDom.push(\n        <meta\n          key={'ogdesc-' + i}\n          name=\"og:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      twitDescDom.push(\n        <meta\n          key={'twitdesc-' + i}\n          name=\"twitter:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n    }\n  }\n  const query = graphql`\n    query SEO2 {\n      site {\n        siteMetadata {\n          defaultTitle: title\n          siteUrl: siteUrl\n          defaultImage: image\n        }\n      }\n    }\n  `\n  return (\n    <StaticQuery\n      query={query}\n      render={({\n        site: {\n          siteMetadata: {\n            defaultTitle,\n            defaultDescription,\n            siteUrl,\n            defaultImage,\n            twitterUsername,\n          },\n        },\n      }) => {\n        const defaultOgImage = `${siteUrl}/${defaultImage}`\n        return (\n          <Helmet>\n            <title>{title + ' : ' + defaultTitle}</title>\n            {/* Last Modified */}\n            <meta name=\"article:author\" content={'geoseong'} />\n            <meta name=\"article:published_time\" content={createdDt} />\n            <meta name=\"article:modified_time\" content={modifiedDt} />\n            <meta name=\"date\" content={modifiedDt} />\n            <meta name=\"last-modified\" content={modifiedDt} />\n            <meta httpEquiv=\"last-modified\" content={modifiedDt} />\n            {/* open graph */}\n            <meta property=\"og:title\" content={title} />\n            {/* og:description */}\n            {openDescDom}\n            <meta\n              property=\"og:url\"\n              content={`${siteUrl}/${locationAfterOrigin}`}\n            />\n            <meta property=\"og:image\" content={ogImage || defaultOgImage} />\n            {/* twitter card */}\n            <meta name=\"twitter:title\" content={title} />\n            {/* twitter:description */}\n            {twitDescDom}\n            <meta name=\"twitter:card\" content={twittercard} />\n            <meta name=\"twitter:domain\" content={siteUrl} />\n            {/* <meta name=\"twitter:domain\" content={`${siteUrl}/${locationAfterOrigin}`} /> */}\n            <meta\n              name=\"twitter:url\"\n              content={`${siteUrl}/${locationAfterOrigin}`}\n            />\n            {/* description(required) */}\n            {metaDescDom}\n            {/* keyword */}\n            <meta name=\"keywords\" content={keywords} />\n            {/* canonical */}\n            <link rel=\"canonical\" href={siteUrl + '/'} />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\nexport default MetaInfo\n","const getFormmatedDt = (formattedDtBefore) => {\n  let set2Length = (val) => {return (val<10)?\"0\" + val:val;}\n  let date = new Date(formattedDtBefore);\n  let formattedDatetimeAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())} ${set2Length(date.getHours())}:${set2Length(date.getMinutes())}`;\n  let formattedDateAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())}`;\n  \n  return {datetime: formattedDatetimeAfter, date: formattedDateAfter};\n}\n\nexport {\n  getFormmatedDt\n}"],"sourceRoot":""}