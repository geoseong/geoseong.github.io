{"version":3,"sources":["webpack:///./src/blogposts/sectionlist.js","webpack:///./src/components/MetaInfo.js","webpack:///./util/convert.js"],"names":["inlineStyle","alignRight","textAlign","marginHorizontal","margin","padding","moreBtnArea","marginTop","listItem","borderBottom","alignDomCenter","display","justifyContent","IndexPage","render","pageContext","this","props","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","type","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_8__","title","section","name","locationAfterOrigin","routing","id","twittercard","keywords","notebook","Fragment","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","toLowerCase","className","page","length","map","item","idx","key","style","getFormmatedDt","lastModifiedTime","datetime","Object","assign","Component","MetaInfo","_ref","description","createdDt","modifiedDt","ogImage","metaDescDom","openDescDom","twitDescDom","recurCnt","Math","floor","i","push","react__WEBPACK_IMPORTED_MODULE_1___default","content","substring","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","siteUrl","defaultDescription","defaultImage","defaultOgImage","twitterUsername","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","httpEquiv","property","rel","href","data","_public_static_d_3468742975_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","formattedDtBefore","set2Length","val","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"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","file":"component---src-blogposts-sectionlist-js-a2c2bbad20b959ba318e.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport routing from '../../postings/routings.json' // prod\n// import routing from '../../postings/routings_debug.json' // debug\nimport { getFormmatedDt } from '../../util/convert'\nimport MetaInfo from '../components/MetaInfo'\n\nconst inlineStyle = {\n  alignRight: {\n    textAlign: 'right',\n  },\n  marginHorizontal: {\n    margin: '0 .5rem',\n    padding: '.3rem 1rem',\n  },\n  moreBtnArea: {\n    marginTop: '.5rem',\n  },\n  listItem: {\n    marginTop: '1rem',\n    padding: '1rem',\n    borderBottom: '1px solid #073642',\n  },\n  alignDomCenter: {\n    margin: '1em 0',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}\n\nclass IndexPage extends Component {\n  render() {\n    const {\n      props: { pageContext },\n    } = this\n    return (\n      <Layout type=\"blog\">\n        <MetaInfo\n          title={pageContext.section.name}\n          type=\"website\"\n          locationAfterOrigin={routing[pageContext.section.id]}\n          twittercard=\"summary\"\n          keywords={`${pageContext.notebook},${\n            pageContext.section.name\n          },geoseong,dev note`}\n        />\n        <React.Fragment>\n          <Link to={pageContext.notebook.toLowerCase()}>\n            <h5 className=\"\">{pageContext.notebook}</h5>\n          </Link>\n          <h1 className=\"text-light\">{pageContext.section.name}</h1>\n          {pageContext.page.length > 0 &&\n            pageContext.page.map((item, idx) => {\n              return (\n                <div key={'section-' + idx} style={inlineStyle.listItem}>\n                  <Link className=\"card-link\" to={routing[item.id]}>\n                    <div className=\"\">\n                      <h4 className=\"\">{item.title}</h4>\n                      <h6 className=\"text-right\">\n                        {getFormmatedDt(item.lastModifiedTime).datetime}\n                      </h6>\n                    </div>\n                    <div\n                      className=\"geoseong-more-txt\"\n                      style={{\n                        ...inlineStyle.alignRight,\n                        ...inlineStyle.moreBtnArea,\n                      }}\n                    >\n                      More...\n                    </div>\n                  </Link>\n                </div>\n              )\n            })}\n        </React.Fragment>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo\n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst MetaInfo = ({\n  description,\n  title,\n  createdDt,\n  modifiedDt,\n  locationAfterOrigin,\n  twittercard,\n  keywords,\n  ogImage,\n}) => {\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (description && description.length > descriptionLength) {\n    const recurCnt = Math.floor(description.length / descriptionLength)\n    for (let i = 0; i < recurCnt; i++) {\n      metaDescDom.push(\n        <meta\n          key={'desc-' + i}\n          name=\"description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      openDescDom.push(\n        <meta\n          key={'ogdesc-' + i}\n          name=\"og:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      twitDescDom.push(\n        <meta\n          key={'twitdesc-' + i}\n          name=\"twitter:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n    }\n  }\n  const query = graphql`\n    query SEO2 {\n      site {\n        siteMetadata {\n          defaultTitle: title\n          siteUrl: siteUrl\n          defaultImage: image\n        }\n      }\n    }\n  `\n  return (\n    <StaticQuery\n      query={query}\n      render={({\n        site: {\n          siteMetadata: {\n            defaultTitle,\n            defaultDescription,\n            siteUrl,\n            defaultImage,\n            twitterUsername,\n          },\n        },\n      }) => {\n        const defaultOgImage = `${siteUrl}/${defaultImage}`\n        return (\n          <Helmet>\n            <title>{title + ' : ' + defaultTitle}</title>\n            {/* Last Modified */}\n            <meta name=\"article:author\" content={'geoseong'} />\n            <meta name=\"article:published_time\" content={createdDt} />\n            <meta name=\"article:modified_time\" content={modifiedDt} />\n            <meta name=\"date\" content={modifiedDt} />\n            <meta name=\"last-modified\" content={modifiedDt} />\n            <meta httpEquiv=\"last-modified\" content={modifiedDt} />\n            {/* open graph */}\n            <meta property=\"og:title\" content={title} />\n            {/* og:description */}\n            {openDescDom}\n            <meta\n              property=\"og:url\"\n              content={`${siteUrl}/${locationAfterOrigin}/`}\n            />\n            <meta property=\"og:image\" content={ogImage || defaultOgImage} />\n            {/* twitter card */}\n            <meta name=\"twitter:title\" content={title} />\n            {/* twitter:description */}\n            {twitDescDom}\n            <meta name=\"twitter:card\" content={twittercard} />\n            <meta name=\"twitter:domain\" content={siteUrl} />\n            <meta name=\"twitter:url\" content={siteUrl + locationAfterOrigin} />\n            {/* description(required) */}\n            {metaDescDom}\n            {/* keyword */}\n            <meta name=\"keywords\" content={keywords} />\n            {/* canonical */}\n            <link rel=\"canonical\" href={siteUrl + '/'} />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\nexport default MetaInfo\n","const getFormmatedDt = (formattedDtBefore) => {\n  let set2Length = (val) => {return (val<10)?\"0\" + val:val;}\n  let date = new Date(formattedDtBefore);\n  let formattedDatetimeAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())} ${set2Length(date.getHours())}:${set2Length(date.getMinutes())}`;\n  let formattedDateAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())}`;\n  \n  return {datetime: formattedDatetimeAfter, date: formattedDateAfter};\n}\n\nexport {\n  getFormmatedDt\n}"],"sourceRoot":""}