{"version":3,"sources":["webpack:///./src/blogposts/pagelist.js","webpack:///./src/components/MetaInfo.js","webpack:///./util/convert.js"],"names":["inlineStyle","titleArea","marginBottom","spaceHorizontal","margin","alignRight","textAlign","IndexPage","render","pageContext","this","props","bodyTag","cheerio","load","page","html","$","find","attr","children","removeAttr","content","replace","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","type","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_10__","title","description","locationAfterOrigin","routing","id","twittercard","keywords","notebook","section","split","join","style","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","toLowerCase","parentSection","getFormmatedDt","lastModifiedTime","datetime","dangerouslySetInnerHTML","__html","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","domain","MetaInfo","metaDescDom","openDescDom","twitDescDom","length","recurCnt","Math","floor","i","push","name","substring","Fragment","property","rel","href","d","__webpack_exports__","formattedDtBefore","set2Length","val","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"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","file":"component---src-blogposts-pagelist-js-33945508fe76ee0c3dbd.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport cheerio from 'cheerio'\nimport Layout from '../components/Layout'\nimport routing from '../../postings/routings.json'\nimport { getFormmatedDt } from '../../util/convert'\nimport MetaInfo from '../components/MetaInfo'\n\nconst inlineStyle = {\n  titleArea: {\n    marginBottom: '2rem',\n  },\n  spaceHorizontal: {\n    margin: '0 .5rem',\n  },\n  alignRight: {\n    textAlign: 'right',\n  }\n}\nclass IndexPage extends Component {\n  render() {\n    const { props: {pageContext} } = this\n    // console.log('pageContext:', pageContext)\n\n    /* OneNote 페이지의 전체 DOM */\n    const $ = cheerio.load(pageContext.page.html);\n    /* body 태그 */\n    const bodyTag = $('body');\n    /* a태그는 target=\"_blank\" attr을 부여하기 */\n    bodyTag.find('a').attr('target', '_blank');\n    /* body 태그 바로 밑의 div의 스타일 attr 없애기 */\n    bodyTag.children('div').removeAttr('style');\n    /* html태그가 없는 내용 */\n    const content = pageContext.page.content.replace(/  /g, '')\n\n    return (\n      <Layout type=\"blog\">\n        <MetaInfo \n          title={pageContext.page.title}\n          description={content}\n          type=\"website\"\n          locationAfterOrigin={routing[pageContext.page.id]}\n          twittercard=\"summary\"\n          keywords={`${pageContext.notebook},${pageContext.section},geoseong,dev note,`+pageContext.page.title.split(' ').join(',')}\n        />\n        <div style={inlineStyle.titleArea}>\n          <h1 className=\"text-light\">{pageContext.page.title}</h1>\n          <div className=\"text-info\">\n            <Link className=\"text-info btn\" to={pageContext.notebook.toLowerCase()}><span className=\"\">{pageContext.notebook}</span></Link>\n            <span className=\"fas fa-angle-double-right\" style={inlineStyle.spaceHorizontal}></span>\n            <Link className=\"text-info btn\" to={routing[pageContext.page.parentSection.id]}><span className=\"\">{pageContext.section}</span></Link>\n          </div>\n          <h6 className=\"text-right\">{getFormmatedDt(pageContext.page.lastModifiedTime).datetime}</h6>\n        </div>\n        <div className=\"geoseong-page-content\" dangerouslySetInnerHTML={{__html: bodyTag}} />\n        <div style={inlineStyle.alignRight}>\n          <Link to={routing[pageContext.page.parentSection.id]}><button type=\"button\" className=\"btn btn-secondary\">목록으로</button></Link>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo \n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst domain = \"https://geoseong.github.io/\"\nconst pageTitle = 'Geoseong\\'s dev note'\nconst mainIcon = ''\nconst MetaInfo = (props) => {\n  // console.log('MetaInfo props', props)\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (props.description && props.description.length > descriptionLength) {\n    const recurCnt = Math.floor(props.description.length / descriptionLength)\n    for(let i=0; i<recurCnt; i++) {\n      metaDescDom.push(<meta name=\"description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n      openDescDom.push(<meta name=\"og:description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n      twitDescDom.push(<meta name=\"twitter:description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n    }\n  }\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{props.title + ' : ' + pageTitle}</title>\n        {/* open graph */}\n        <meta property=\"og:title\" content={props.title} />\n        {/* og:description */}\n        {openDescDom}\n        <meta property=\"og:url\" content={domain + props.locationAfterOrigin} />\n        <meta property=\"og:image\" content={mainIcon} />\n        {/* twitter card */}\n        <meta name=\"twitter:title\" content={props.title} />\n        {/* twitter:description */}\n        {twitDescDom}\n        <meta name=\"twitter:card\" content={props.twittercard} />\n        <meta name=\"twitter:domain\" content={domain} />\n        <meta name=\"twitter:url\" content={domain + props.locationAfterOrigin} />\n        {/* description(required) */}\n        {metaDescDom}\n        {/* keyword */}\n        <meta name=\"keywords\" content={props.keywords} />\n        {/* canonical */}\n        <link rel=\"canonical\" href={domain + '/'} />\n      </Helmet>\n    </React.Fragment>\n  )\n}\nexport default MetaInfo","const getFormmatedDt = (formattedDtBefore) => {\n  let set2Length = (val) => {return (val<10)?\"0\" + val:val;}\n  let date = new Date(formattedDtBefore);\n  let formattedDatetimeAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())} ${set2Length(date.getHours())}:${set2Length(date.getMinutes())}`;\n  let formattedDateAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())}`;\n  \n  return {datetime: formattedDatetimeAfter, date: formattedDateAfter};\n}\n\nexport {\n  getFormmatedDt\n}"],"sourceRoot":""}