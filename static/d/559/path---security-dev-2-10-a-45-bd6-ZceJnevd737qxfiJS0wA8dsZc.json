{"pageContext":{"isCreatedByStatefulCreatePages":false,"notebook":"Security Dev","section":"보안","page":{"id":"0-a85ee5c8201d684ea4b70af220a1f613!1-BC575AB8E2AB9833!2195","self":"https://www.onenote.com/api/v1.0/me/notes/pages/0-a85ee5c8201d684ea4b70af220a1f613!1-BC575AB8E2AB9833!2195","createdTime":"2017-09-26T12:43:29.277Z","title":"안드로이드 <-> node.js 암호/복호화 시 유의.","createdByAppId":"","links":{"oneNoteEmbedUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2191&parId=BC575AB8E2AB9833!109&wd=target%28%EB%B3%B4%EC%95%88.one%7C0320ce34-4b3c-eb45-88a7-049d75244b31%2F%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%20%3C-%3E%20node.js%20%EC%95%94%ED%98%B8%5C%2F%EB%B3%B5%ED%98%B8%ED%99%94%20%7C14a59c3c-33e0-a647-b449-06c4bb9ca3f5%2F%29"},"oneNoteClientUrl":{"href":"onenote:https://d.docs.live.net/bc575ab8e2ab9833/Documents/Security%20Dev/%EB%B3%B4%EC%95%88.one#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%20%3C-%3E%20node.js%20%EC%95%94%ED%98%B8%2F%EB%B3%B5%ED%98%B8%ED%99%94%20&section-id=0320ce34-4b3c-eb45-88a7-049d75244b31&page-id=14a59c3c-33e0-a647-b449-06c4bb9ca3f5&end"},"oneNoteWebUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2191&parId=BC575AB8E2AB9833!109&wd=target%28%EB%B3%B4%EC%95%88.one%7C0320ce34-4b3c-eb45-88a7-049d75244b31%2F%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%20%3C-%3E%20node.js%20%EC%95%94%ED%98%B8%5C%2F%EB%B3%B5%ED%98%B8%ED%99%94%20%7C14a59c3c-33e0-a647-b449-06c4bb9ca3f5%2F%29"}},"contentUrl":"https://www.onenote.com/api/v1.0/me/notes/pages/0-a85ee5c8201d684ea4b70af220a1f613!1-BC575AB8E2AB9833!2195/content","lastModifiedTime":"2017-11-09T14:09:09Z","parentSection@odata.context":"https://www.onenote.com/api/v1.0/$metadata#me/notes/sections('0-BC575AB8E2AB9833%212195')/pages('0-a85ee5c8201d684ea4b70af220a1f613%211-BC575AB8E2AB9833%212195')/parentSection(id,name,self)/$entity","parentSection":{"id":"0-BC575AB8E2AB9833!2195","name":"보안","self":"https://www.onenote.com/api/v1.0/me/notes/sections/0-BC575AB8E2AB9833!2195"},"content":"           암호화 문자열에 \\n 이 들어가면 복호화가 되지 않는다. Javascript/nodejs에서...            BASE64 스트링 만들때        Flag 가 있는데요            /         * Default values for encoder/decoder flags.         */        public static final int DEFAULT = 0;            /         * Encoder flag bit to omit the padding '=' characters at the end         * of the output (if any).         */        public static final int NO_PADDING = 1;            /         * Encoder flag bit to omit all line terminators (i.e., the output         * will be on one long line).         */        public static final int NO_WRAP = 2;            /         * Encoder flag bit to indicate lines should be terminated with a         * CRLF pair instead of just an LF.  Has no effect if {@code         * NO_WRAP} is specified as well.         */        public static final int CRLF = 4;            /         * Encoder/decoder flag bit to indicate using the \"URL and         * filename safe\" variant of Base64 (see RFC 3548 section 4) where         * {@code -} and {@code _} are used in place of {@code +} and         * {@code /}.         */        public static final int URL_SAFE = 8;            /         * Flag to pass to {@link Base64OutputStream} to indicate that it         * should not close the output stream it is wrapping when it         * itself is closed.         */        public static final int NO_CLOSE = 16;        이렇게.. 플래그가 6가지가 있는데        안드로이드에서는 기본 DEFAULT 를 사용했었거든요    근데 NO_WRAP 으로 바꾸니까 잘되네요       ","html":"\n\t\t<div style=\"position:absolute;left:63px;top:116px;width:561px\">\n\t\t\t<br>\n\t\t\t<h2 style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">&#xC554;&#xD638;&#xD654;<span lang=\"en-US\"> </span>&#xBB38;&#xC790;&#xC5F4;&#xC5D0;<span lang=\"en-US\"> \\n </span>&#xC774;<span lang=\"en-US\"> </span>&#xB4E4;&#xC5B4;&#xAC00;&#xBA74;<span lang=\"en-US\"> </span>&#xBCF5;&#xD638;&#xD654;&#xAC00;<span lang=\"en-US\"> </span>&#xB418;&#xC9C0;<span lang=\"en-US\"> </span>&#xC54A;&#xB294;&#xB2E4;<span lang=\"en-US\">. Javascript/nodejs</span>&#xC5D0;&#xC11C;<span lang=\"en-US\">...</span></h2>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">BASE64 &#xC2A4;&#xD2B8;&#xB9C1; &#xB9CC;&#xB4E4;&#xB54C;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">Flag &#xAC00; &#xC788;&#xB294;&#xB370;&#xC694;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    <span style=\"color:#00b050\">/</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Default values for encoder/decoder flags.</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int DEFAULT = 0;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    <span style=\"color:#00b050\">/</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Encoder flag bit to omit the padding &apos;=&apos; characters at the end</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * of the output (if any).</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int NO_PADDING = 1;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">    /</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Encoder flag bit to omit all line terminators (i.e., the output</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * will be on one long line).</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int NO_WRAP = 2;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">    /</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Encoder flag bit to indicate lines should be terminated with a</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * CRLF pair instead of just an LF.  Has no effect if {@code</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * NO_WRAP} is specified as well.</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int CRLF = 4;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">    /</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Encoder/decoder flag bit to indicate using the &quot;URL and</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * filename safe&quot; variant of Base64 (see RFC 3548 section 4) where</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * {@code -} and {@code _} are used in place of {@code +} and</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * {@code /}.</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int URL_SAFE = 8;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">   <span style=\"color:#00b050\"> /</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * Flag to pass to {@link Base64OutputStream} to indicate that it</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * should not close the output stream it is wrapping when it</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     * itself is closed.</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"color:#00b050\">     */</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">    public static final int NO_CLOSE = 16;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">&#xC774;&#xB807;&#xAC8C;.. &#xD50C;&#xB798;&#xADF8;&#xAC00; 6&#xAC00;&#xC9C0;&#xAC00; &#xC788;&#xB294;&#xB370;</p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">&#xC548;&#xB4DC;&#xB85C;&#xC774;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xAE30;&#xBCF8; DEFAULT &#xB97C; &#xC0AC;&#xC6A9;&#xD588;&#xC5C8;&#xAC70;&#xB4E0;&#xC694;</p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"text-decoration:underline\">&#xADFC;&#xB370;</span><span lang=\"en-US\" style=\"text-decoration:underline\"> NO_</span><span style=\"text-decoration:underline\">WRAP</span><span lang=\"en-US\" style=\"text-decoration:underline\"> </span><span style=\"text-decoration:underline\">&#xC73C;&#xB85C;</span><span lang=\"en-US\" style=\"text-decoration:underline\"> </span><span style=\"text-decoration:underline\">&#xBC14;&#xAFB8;&#xB2C8;&#xAE4C;</span><span lang=\"en-US\" style=\"text-decoration:underline\"> </span><span style=\"text-decoration:underline\">&#xC798;&#xB418;&#xB124;&#xC694;</span></p>\n\t\t</div>\n\t\n\n"}}}