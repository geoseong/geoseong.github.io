{"pageContext":{"notebook":"React-Native","section":"ReactNative","page":{"id":"0-db658751339b024299dc412c188f91fe!1-BC575AB8E2AB9833!2154","self":"https://www.onenote.com/api/v1.0/me/notes/pages/0-db658751339b024299dc412c188f91fe!1-BC575AB8E2AB9833!2154","createdTime":"2018-01-11T07:42:38.513Z","title":"bind() 메소드 사용.","createdByAppId":"","links":{"oneNoteEmbedUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2149&parId=BC575AB8E2AB9833!109&wd=target%28ReactNative.one%7Cbe289a69-87c8-054e-8d73-1b4e92294c1b%2Fbind%28%5C%29%20%EB%A9%94%EC%86%8C%EB%93%9C%20%EC%82%AC%EC%9A%A9.%7C95ddf12b-cb53-434e-8448-e84c6730ec04%2F%29"},"oneNoteClientUrl":{"href":"onenote:https://d.docs.live.net/bc575ab8e2ab9833/Documents/React-Native/ReactNative.one#bind%28%29%20%EB%A9%94%EC%86%8C%EB%93%9C%20%EC%82%AC%EC%9A%A9.&section-id=be289a69-87c8-054e-8d73-1b4e92294c1b&page-id=95ddf12b-cb53-434e-8448-e84c6730ec04&end"},"oneNoteWebUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2149&parId=BC575AB8E2AB9833!109&wd=target%28ReactNative.one%7Cbe289a69-87c8-054e-8d73-1b4e92294c1b%2Fbind%28%5C%29%20%EB%A9%94%EC%86%8C%EB%93%9C%20%EC%82%AC%EC%9A%A9.%7C95ddf12b-cb53-434e-8448-e84c6730ec04%2F%29"}},"contentUrl":"https://www.onenote.com/api/v1.0/me/notes/pages/0-db658751339b024299dc412c188f91fe!1-BC575AB8E2AB9833!2154/content","lastModifiedTime":"2019-02-09T13:57:43Z","parentSection@odata.context":"https://www.onenote.com/api/v1.0/$metadata#me/notes/sections('0-BC575AB8E2AB9833%212154')/pages('0-db658751339b024299dc412c188f91fe%211-BC575AB8E2AB9833%212154')/parentSection(id,name,self)/$entity","parentSection":{"id":"0-BC575AB8E2AB9833!2154","name":"ReactNative","self":"https://www.onenote.com/api/v1.0/me/notes/sections/0-BC575AB8E2AB9833!2154"},"content":"       https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56        1. Use React.createClass    If you use React.createClass, React autobinds all functions to this. So the this keyword is bound to your component’s instance automatically:        // This magically works with React.createClass    // because `this` is bound for you.    onChange={this.handleChange}    However, with the advent of ES6 classes, this non-standard approach to creating classes isn’t the future of React. In fact, createClass is likely to be extracted from React core in a future release.    2. Bind in Render    The rest of these approaches assume you’re declaring React components via ES6 classes. If you use an ES6 class, React no longer autobinds. One way to resolve this is to call bind in render:        onChange={this.handleChange.bind(this)}           ","html":"\n\t\t<div style=\"position:absolute;left:48px;top:139px;width:576px\">\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><a href=\"https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56\">https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56</a></p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:22.5pt;margin-bottom:0pt\"><span style=\"font-size:19.5pt;background-color:white\">1. Use React.createClass</span></p>\n\t\t\t<p style=\"margin-top:4.5pt;margin-bottom:0pt\"><span style=\"font-size:12pt;background-color:white\">If you use&#xA0;</span><a href=\"https://facebook.github.io/react/docs/top-level-api.html#react.createclass\" style=\"font-size:12pt;background-color:white\">React.createClass</a><span style=\"font-size:12pt;background-color:white\">,&#xA0;</span><a href=\"https://facebook.github.io/react/docs/tutorial.html#events\" style=\"font-size:12pt;background-color:white\">React autobinds all functions to&#xA0;</a><span style=\"font-size:12pt;background-color:white;font-weight:bold\">this</span><span style=\"font-size:12pt;background-color:white\">. So the&#xA0;</span><span style=\"font-size:12pt;background-color:white;font-weight:bold\">this</span><span lang=\"en-US\" style=\"font-size:12pt;background-color:white;font-weight:bold\"> </span><span style=\"font-size:12pt;background-color:white\">keyword is bound to your component&#x2019;s instance automatically:</span></p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-size:12pt;color:#70ad47;font-weight:bold;font-style:italic\">// This magically works with React.createClass</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-size:12pt;color:#70ad47;font-weight:bold;font-style:italic\">// because `this` is bound for you.</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-size:12pt;color:#0432ff;font-weight:bold;font-style:italic\">onChange=</span><span style=\"font-size:12pt;color:#0432ff;font-style:italic\">{</span><span style=\"font-size:12pt;color:#0432ff;font-weight:bold;font-style:italic\">this</span><span style=\"font-size:12pt;color:#0432ff;font-style:italic\">.handleChange}</span></p>\n\t\t\t<p style=\"margin-top:28.5pt;margin-bottom:0pt\"><span style=\"font-size:12pt;background-color:white\">However, with the advent of ES6 classes, this non-standard approach to creating classes isn&#x2019;t the future of React. In fact,&#xA0;</span><a href=\"https://facebook.github.io/react/blog/#other-use-cases\" style=\"font-size:12pt;background-color:white\">createClass is likely to be extracted from React core in a future release</a><span style=\"font-size:12pt;background-color:white\">.</span></p>\n\t\t\t<p style=\"margin-top:22.5pt;margin-bottom:0pt\"><span style=\"font-size:19.5pt;background-color:white\">2. Bind in&#xA0;Render</span></p>\n\t\t\t<p style=\"margin-top:4.5pt;margin-bottom:0pt\"><span style=\"font-size:12pt;background-color:white\">The rest of these approaches assume you&#x2019;re declaring React components via ES6 classes. If you use an ES6 class, </span><span style=\"font-size:12pt;color:#0432ff;background-color:white;text-decoration:underline\">React no longer autobinds.</span><span style=\"font-size:12pt;background-color:white\"> One way to resolve this is to </span><span style=\"font-size:12pt;color:#0432ff;background-color:white;font-weight:bold;font-style:italic\">call bind in render</span><span style=\"font-size:12pt;background-color:white\">:</span></p>\n\t\t\t<br>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-weight:bold;font-style:italic\">onChange=</span><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-style:italic\">{</span><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-weight:bold;font-style:italic\">this</span><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-style:italic\">.handleChange.bind(</span><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-weight:bold;font-style:italic\">this</span><span style=\"font-family:Menlo;font-size:12pt;color:#0432ff;font-style:italic\">)}</span></p>\n\t\t\t<br>\n\t\t</div>\n\t\n\n"}}}