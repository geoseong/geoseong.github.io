{"pageContext":{"isCreatedByStatefulCreatePages":false,"notebook":"AWS","section":"AWS Seminar","page":{"id":"0-30a6df83b78bc44e8cf0b14d047de24e!1-BC575AB8E2AB9833!2018","self":"https://www.onenote.com/api/v1.0/me/notes/pages/0-30a6df83b78bc44e8cf0b14d047de24e!1-BC575AB8E2AB9833!2018","createdTime":"2017-09-13T05:11:48.425Z","title":"AWS 201 : DynamoDB","createdByAppId":"","links":{"oneNoteEmbedUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2000&parId=BC575AB8E2AB9833!109&wd=target%28AWS%20Seminar.one%7C57f25153-04cd-c34d-8544-b69c59510bfb%2FAWS%20201%20%20DynamoDB%7C7306e8cc-6dce-dd42-92a3-fd4a2ac1e4f1%2F%29"},"oneNoteClientUrl":{"href":"onenote:https://d.docs.live.net/bc575ab8e2ab9833/Documents/AWS/AWS%20Seminar.one#AWS%20201%20%20DynamoDB&section-id=57f25153-04cd-c34d-8544-b69c59510bfb&page-id=7306e8cc-6dce-dd42-92a3-fd4a2ac1e4f1&end"},"oneNoteWebUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2000&parId=BC575AB8E2AB9833!109&wd=target%28AWS%20Seminar.one%7C57f25153-04cd-c34d-8544-b69c59510bfb%2FAWS%20201%20%20DynamoDB%7C7306e8cc-6dce-dd42-92a3-fd4a2ac1e4f1%2F%29"}},"contentUrl":"https://www.onenote.com/api/v1.0/me/notes/pages/0-30a6df83b78bc44e8cf0b14d047de24e!1-BC575AB8E2AB9833!2018/content","lastModifiedTime":"2017-09-13T06:43:19Z","parentSection@odata.context":"https://www.onenote.com/api/v1.0/$metadata#me/notes/sections('0-BC575AB8E2AB9833%212018')/pages('0-30a6df83b78bc44e8cf0b14d047de24e%211-BC575AB8E2AB9833%212018')/parentSection(id,name,self)/$entity","parentSection":{"id":"0-BC575AB8E2AB9833!2018","name":"AWS Seminar","self":"https://www.onenote.com/api/v1.0/me/notes/sections/0-BC575AB8E2AB9833!2018"},"content":"       NoSQL의 장점.    수억개의 데이터가 있더라도 몇 밀리세컨만에 원하는 데이터를 받아올 수 있다.        인덱스: Local secondary index (LSI)    RDB의 인덱스와 다른 개념의 DynamoDB의 인덱스.        LSI (Local secondary index)    Hash | range | table key    한 개의 Row를 결정하는 것 : hash key(where hash_key = …)    정렬 : range key(Order by …)    기본적으로는 hash나 range를 통해서 데이터를 가져오나, 조건을 더 주고 싶을때 LSI를 이용한다.    Hash key를 바꾸진 못한다.        GSI (Global Secondary Index)    Hasy key와 range key를 바꿀 수 있다.    10기가 이상의 데이터라면 GSI를 써라    원하는 IOPS를 선택해서 RCUs/ WCUs를 조정하여 비용을 정할 수 있다.    Asynchronous update(in progress)    오리지널 테이블의 내용을 수정했을때 매우 찰나에 혹여나 동기화되지않은 (수정되지않은) 데이터가 리턴될 수 있다.        Hash Key    mongoDB의 _id개념, Primary 의 개념으로 봐야할 것 같음.    예) Secondary Index의 hashkey는 무엇으로 지정해라..        Partitioning math    By Capacity : (Total RCU / 3000) + (Total WCU / 1000) (IOPS)    By Size : Total Size / 10 (GB)    Total Partitions : CEILING(MAX(Capacity, Size))        Ex) Table Size = 8GB, RCUs = 5000, WCUs = 500    By Capacity : (Total RCU / 3000) + (Total WCU / 1000) (IOPS)    By Size : 8 / 10 = 0.8 (GB)    Total Partitions : CEILING(MAX(Capacity, Size)) = 3개의 파티션을 쓴다..    그러면 RCUs와 WCUs의 IOPS 에 파티션갯수인 3을 나누는 것이 최종 성능이 된단다..        Throttling    DynamoDB에서 뱉어내는 에러.        Hot data, Cold data    Cold data는 S3에 아카이브 해놔라..        TTL    자동으로 item 이 지워지도록 시간을 정할 수 있다.    기간을 정해서 지우는 로직을 코딩하지 않고 아마존에서 대신 해준다는 개념.        Elasticache (Redis, … 지원)    자주 사용하는 item을 캐시한다..    이런 아키텍처 구성으로 DynamoDB의 IOPS를 줄이고 비용이 줄 수도 있다.        Sparse index    Secondary index가 없는 컬럼을 조건으로 찾고싶을때    아얘 그 컬럼을 hash key로 하는 테이블을 새로 만들면 조건에 맞는 결과가 테이블로 만들어지게 된다.        Data Import / Export    AWS 한국 블로그 글 참조         Pipeline     리전간 복사/이동                 DynamoDB Accelerator (DAX)    캐시를 따로 만들어서 관히하는 것이 아닌 DynamoDB안에 캐시가 들어가있는 형태.       ","html":"\n\t\t<div style=\"position:absolute;left:51px;top:116px;width:573px\">\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">NoSQL&#xC758; &#xC7A5;&#xC810;.</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC218;&#xC5B5;&#xAC1C;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC788;&#xB354;&#xB77C;&#xB3C4; &#xBA87; &#xBC00;&#xB9AC;&#xC138;&#xCEE8;&#xB9CC;&#xC5D0; &#xC6D0;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBC1B;&#xC544;&#xC62C; &#xC218; &#xC788;&#xB2E4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">&#xC778;&#xB371;&#xC2A4;: Local secondary index (LSI)</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">RDB&#xC758; &#xC778;&#xB371;&#xC2A4;&#xC640; &#xB2E4;&#xB978; &#xAC1C;&#xB150;&#xC758; DynamoDB&#xC758; &#xC778;&#xB371;&#xC2A4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">LSI (Local secondary index)</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Hash | range | table key</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xD55C; &#xAC1C;&#xC758; Row&#xB97C; &#xACB0;&#xC815;&#xD558;&#xB294; &#xAC83; : hash key(where hash_key = &#x2026;)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC815;&#xB82C; : range key(Order by &#x2026;)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; hash&#xB098; range&#xB97C; &#xD1B5;&#xD574;&#xC11C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xB098;, &#xC870;&#xAC74;&#xC744; &#xB354; &#xC8FC;&#xACE0; &#xC2F6;&#xC744;&#xB54C; LSI&#xB97C; &#xC774;&#xC6A9;&#xD55C;&#xB2E4;.</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Hash key&#xB97C; &#xBC14;&#xAFB8;&#xC9C4; &#xBABB;&#xD55C;&#xB2E4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">GSI (Global Secondary Index)</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Hasy key&#xC640; range key&#xB97C; &#xBC14;&#xAFC0; &#xC218; &#xC788;&#xB2E4;.</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">10&#xAE30;&#xAC00; &#xC774;&#xC0C1;&#xC758; &#xB370;&#xC774;&#xD130;&#xB77C;&#xBA74; GSI&#xB97C; &#xC368;&#xB77C;</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC6D0;&#xD558;&#xB294; IOPS&#xB97C; &#xC120;&#xD0DD;&#xD574;&#xC11C; RCUs/ WCUs&#xB97C; &#xC870;&#xC815;&#xD558;&#xC5EC; &#xBE44;&#xC6A9;&#xC744; &#xC815;&#xD560; &#xC218; &#xC788;&#xB2E4;.</p>\n\t\t\t<h3 lang=\"en-US\" style=\"font-size:12pt;color:#5b9bd5;margin-top:0pt;margin-bottom:0pt\">Asynchronous update(in progress)</h3>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC624;&#xB9AC;&#xC9C0;&#xB110; &#xD14C;&#xC774;&#xBE14;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC218;&#xC815;&#xD588;&#xC744;&#xB54C; &#xB9E4;&#xC6B0; &#xCC30;&#xB098;&#xC5D0; &#xD639;&#xC5EC;&#xB098; &#xB3D9;&#xAE30;&#xD654;&#xB418;&#xC9C0;&#xC54A;&#xC740; (&#xC218;&#xC815;&#xB418;&#xC9C0;&#xC54A;&#xC740;) &#xB370;&#xC774;&#xD130;&#xAC00; &#xB9AC;&#xD134;&#xB420; &#xC218; &#xC788;&#xB2E4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Hash Key</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">mongoDB&#xC758; _id&#xAC1C;&#xB150;, Primary &#xC758; &#xAC1C;&#xB150;&#xC73C;&#xB85C; &#xBD10;&#xC57C;&#xD560; &#xAC83; &#xAC19;&#xC74C;.</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC608;) Secondary Index&#xC758; hashkey&#xB294; &#xBB34;&#xC5C7;&#xC73C;&#xB85C; &#xC9C0;&#xC815;&#xD574;&#xB77C;..</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Partitioning math</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">By Capacity : (Total RCU / 3000) + (Total WCU / 1000) (IOPS)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">By Size : Total Size / 10 (GB)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Total Partitions : CEILING(MAX(Capacity, Size))</p>\n\t\t\t<br>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Ex) Table Size = 8GB, RCUs = 5000, WCUs = 500</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">By Capacity : (Total RCU / 3000) + (Total WCU / 1000) (IOPS)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">By Size : 8 / 10 = 0.8 (GB)</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Total Partitions : CEILING(MAX(Capacity, Size)) = 3&#xAC1C;&#xC758; &#xD30C;&#xD2F0;&#xC158;&#xC744; &#xC4F4;&#xB2E4;..</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xADF8;&#xB7EC;&#xBA74; RCUs&#xC640; WCUs&#xC758; IOPS &#xC5D0; &#xD30C;&#xD2F0;&#xC158;&#xAC2F;&#xC218;&#xC778; 3&#xC744; &#xB098;&#xB204;&#xB294; &#xAC83;&#xC774; &#xCD5C;&#xC885; &#xC131;&#xB2A5;&#xC774; &#xB41C;&#xB2E8;&#xB2E4;..</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Throttling</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">DynamoDB&#xC5D0;&#xC11C; &#xBC49;&#xC5B4;&#xB0B4;&#xB294; &#xC5D0;&#xB7EC;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Hot data, Cold data</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Cold data&#xB294; S3&#xC5D0; &#xC544;&#xCE74;&#xC774;&#xBE0C; &#xD574;&#xB194;&#xB77C;..</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">TTL</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC790;&#xB3D9;&#xC73C;&#xB85C; item &#xC774; &#xC9C0;&#xC6CC;&#xC9C0;&#xB3C4;&#xB85D; &#xC2DC;&#xAC04;&#xC744; &#xC815;&#xD560; &#xC218; &#xC788;&#xB2E4;.</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xAE30;&#xAC04;&#xC744; &#xC815;&#xD574;&#xC11C; &#xC9C0;&#xC6B0;&#xB294; &#xB85C;&#xC9C1;&#xC744; &#xCF54;&#xB529;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xC544;&#xB9C8;&#xC874;&#xC5D0;&#xC11C; &#xB300;&#xC2E0; &#xD574;&#xC900;&#xB2E4;&#xB294; &#xAC1C;&#xB150;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Elasticache (Redis, &#x2026; &#xC9C0;&#xC6D0;)</h2>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\">&#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xD558;&#xB294; <span lang=\"en-US\">item</span><span lang=\"en-US\">&#xC744; &#xCE90;&#xC2DC;&#xD55C;&#xB2E4;</span><span lang=\"en-US\">..</span></p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC774;&#xB7F0; &#xC544;&#xD0A4;&#xD14D;&#xCC98; &#xAD6C;&#xC131;&#xC73C;&#xB85C; DynamoDB&#xC758; IOPS&#xB97C; &#xC904;&#xC774;&#xACE0; &#xBE44;&#xC6A9;&#xC774; &#xC904; &#xC218;&#xB3C4; &#xC788;&#xB2E4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Sparse index</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">Secondary index&#xAC00; &#xC5C6;&#xB294; &#xCEEC;&#xB7FC;&#xC744; &#xC870;&#xAC74;&#xC73C;&#xB85C; &#xCC3E;&#xACE0;&#xC2F6;&#xC744;&#xB54C;</p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xC544;&#xC598; &#xADF8; &#xCEEC;&#xB7FC;&#xC744; hash key&#xB85C; &#xD558;&#xB294; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC0C8;&#xB85C; &#xB9CC;&#xB4E4;&#xBA74; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; &#xACB0;&#xACFC;&#xAC00; &#xD14C;&#xC774;&#xBE14;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC9C0;&#xAC8C; &#xB41C;&#xB2E4;.</p>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">Data Import / Export</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">AWS &#xD55C;&#xAD6D; &#xBE14;&#xB85C;&#xADF8; &#xAE00; &#xCC38;&#xC870;</p>\n\t\t\t<ol>\n\t\t\t\t<li><span lang=\"en-US\">Pipeline</span></li>\n\t\t\t\t<li><span lang=\"en-US\">&#xB9AC;&#xC804;&#xAC04; &#xBCF5;&#xC0AC;/&#xC774;&#xB3D9;</span></li>\n\t\t\t\t<br>\n\t\t\t</ol>\n\t\t\t<br>\n\t\t\t<h2 lang=\"en-US\" style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">DynamoDB Accelerator (DAX)</h2>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">&#xCE90;&#xC2DC;&#xB97C; &#xB530;&#xB85C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xAD00;&#xD788;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC544;&#xB2CC; DynamoDB&#xC548;&#xC5D0; &#xCE90;&#xC2DC;&#xAC00; &#xB4E4;&#xC5B4;&#xAC00;&#xC788;&#xB294; &#xD615;&#xD0DC;.</p>\n\t\t</div>\n\t\n\n"}}}