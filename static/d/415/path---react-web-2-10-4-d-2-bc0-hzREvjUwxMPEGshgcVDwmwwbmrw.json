{"pageContext":{"notebook":"React-web","section":"React.js[velopert]","page":{"id":"0-00ddf21ac96f6144b31bb277f91fad86!1-BC575AB8E2AB9833!2153","self":"https://www.onenote.com/api/v1.0/me/notes/pages/0-00ddf21ac96f6144b31bb277f91fad86!1-BC575AB8E2AB9833!2153","createdTime":"2018-01-31T10:17:13.267Z","title":"LifeCycle 예제 코드","createdByAppId":"","links":{"oneNoteEmbedUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2142&parId=BC575AB8E2AB9833!109&wd=target%28React.js%5Bvelopert%5D.one%7C6949d872-b132-8340-9b67-967a4c7fef29%2FLifeCycle%20%EC%98%88%EC%A0%9C%20%EC%BD%94%EB%93%9C%7Cd0506cc1-454f-3b4f-a69c-c87ad9578ef3%2F%29"},"oneNoteClientUrl":{"href":"onenote:https://d.docs.live.net/bc575ab8e2ab9833/Documents/React-web/React.js%5Bvelopert%5D.one#LifeCycle%20%EC%98%88%EC%A0%9C%20%EC%BD%94%EB%93%9C&section-id=6949d872-b132-8340-9b67-967a4c7fef29&page-id=d0506cc1-454f-3b4f-a69c-c87ad9578ef3&end"},"oneNoteWebUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2142&parId=BC575AB8E2AB9833!109&wd=target%28React.js%5Bvelopert%5D.one%7C6949d872-b132-8340-9b67-967a4c7fef29%2FLifeCycle%20%EC%98%88%EC%A0%9C%20%EC%BD%94%EB%93%9C%7Cd0506cc1-454f-3b4f-a69c-c87ad9578ef3%2F%29"}},"contentUrl":"https://www.onenote.com/api/v1.0/me/notes/pages/0-00ddf21ac96f6144b31bb277f91fad86!1-BC575AB8E2AB9833!2153/content","lastModifiedTime":"2018-01-31T10:20:28Z","parentSection@odata.context":"https://www.onenote.com/api/v1.0/$metadata#me/notes/sections('0-BC575AB8E2AB9833%212153')/pages('0-00ddf21ac96f6144b31bb277f91fad86%211-BC575AB8E2AB9833%212153')/parentSection(id,name,self)/$entity","parentSection":{"id":"0-BC575AB8E2AB9833!2153","name":"React.js[velopert]","self":"https://www.onenote.com/api/v1.0/me/notes/sections/0-BC575AB8E2AB9833!2153"},"content":"       class App extends React.Component {                constructor(props){            super(props);            this.state = {                number: 0,                show: false            }        }                _increase(){            this.setState({                number: this.state.number+1            });        }                _show() {            this.setState({                show: true            });        }                _unmount() {            this.setState({                number: 0,                show: false            });        }                render(){            let component = (<Card number={this.state.number}/>);            return  (                <div>                    <Button caption=\"Show Card\" customClass=\"green\" onClick={this._show.bind(this)} />                    <Button caption=\"Increase Number\" customClass=\"blue\" onClick={this._increase.bind(this)}/>                    <Button caption=\"Unmount Card\" customClass=\"red\" onClick={this._unmount.bind(this)}/>                    {this.state.show ? component : \"\"}                </div>            );        }    }        class Button extends React.Component {        render() {            let className = \"ui button \" + this.props.customClass;                        return (                <div onClick={this.props.onClick}className={className}>{this.props.caption}</div>                            )        }    }        class Card extends React.Component {        constructor(props){            super(props);            console.log(\"constructor\");        }        componentWillMount(){            console.log(\"componentWillMount\");        }                componentDidMount(){            console.log(\"componentDidMount\");        }                componentWillReceiveProps(nextProps){            console.log(\"componentWillReceiveProps: \" + JSON.stringify(nextProps));        }                shouldComponentUpdate(nextProps, nextState){            console.log(\"shouldComponentUpdate: \" + JSON.stringify(nextProps) + \" \" + JSON.stringify(nextState));            return true;        }                componentWillUpdate(nextProps, nextState){            console.log(\"componentWillUpdate: \" + JSON.stringify(nextProps) + \" \" + JSON.stringify(nextState));        }                componentDidUpdate(prevProps, prevState){            console.log(\"componentDidUpdate: \" + JSON.stringify(prevProps) + \" \" + JSON.stringify(prevState));        }                componentWillUnmount(){            console.log(\"componentWillUnmount\");        }                render() {            console.log(\"render\");            return (<div className=\"ui card\">            <div className=\"content\">                number: {this.props.number}            </div>        </div>)    }    }        ReactDOM.render(<App/>, document.getElementById('root'));       ","html":"\n\t\t<div style=\"position:absolute;left:48px;top:139px;width:624px\">\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">class App extends React.Component {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    constructor(props){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        super(props);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        this.state = {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            number: 0,</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            show: false</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    _increase(){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        this.setState({</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            number: this.state.number+1</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        });</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    _show() {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        this.setState({</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            show: true</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        });</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    _unmount() {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        this.setState({</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            number: 0,</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            show: false</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        });</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    render(){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        let component = (&lt;Card number={this.state.number}/&gt;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        return  (</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            &lt;div&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">                &lt;Button caption=&quot;Show Card&quot; customClass=&quot;green&quot; onClick={this._show.bind(this)} /&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">                &lt;Button caption=&quot;Increase Number&quot; customClass=&quot;blue&quot; onClick={this._increase.bind(this)}/&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">                &lt;Button caption=&quot;Unmount Card&quot; customClass=&quot;red&quot; onClick={this._unmount.bind(this)}/&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">                {this.state.show ? component : &quot;&quot;}</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            &lt;/div&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        );</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">}</p>\n\t\t\t<br>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">class Button extends React.Component {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    render() {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        let className = &quot;ui button &quot; + this.props.customClass;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        return (</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            &lt;div onClick={this.props.onClick}className={className}&gt;{this.props.caption}&lt;/div&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        )</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">}</p>\n\t\t\t<br>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">class Card extends React.Component {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    constructor(props){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        super(props);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;constructor&quot;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentWillMount(){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentWillMount&quot;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentDidMount(){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentDidMount&quot;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentWillReceiveProps(nextProps){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentWillReceiveProps: &quot; + JSON.stringify(nextProps));</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    shouldComponentUpdate(nextProps, nextState){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;shouldComponentUpdate: &quot; + JSON.stringify(nextProps) + &quot; &quot; + JSON.stringify(nextState));</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        return true;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentWillUpdate(nextProps, nextState){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentWillUpdate: &quot; + JSON.stringify(nextProps) + &quot; &quot; + JSON.stringify(nextState));</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentDidUpdate(prevProps, prevState){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentDidUpdate: &quot; + JSON.stringify(prevProps) + &quot; &quot; + JSON.stringify(prevState));</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    componentWillUnmount(){</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;componentWillUnmount&quot;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    }</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    render() {</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        console.log(&quot;render&quot;);</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        return (&lt;div className=&quot;ui card&quot;&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        &lt;div className=&quot;content&quot;&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">            number: {this.props.number}</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">        &lt;/div&gt;</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">    &lt;/div&gt;)</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">}</p>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">}</p>\n\t\t\t<br>\n\t\t\t<p lang=\"ko-KR\" style=\"margin-top:0pt;margin-bottom:0pt\">ReactDOM.render(&lt;App/&gt;, document.getElementById(&apos;root&apos;));</p>\n\t\t</div>\n\t\n\n"}}}