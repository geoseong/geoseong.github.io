{"pageContext":{"notebook":"Security Dev","section":"보안","page":{"id":"0-d29e12945cbd294998c37cc90252b8a7!1-BC575AB8E2AB9833!2195","self":"https://www.onenote.com/api/v1.0/me/notes/pages/0-d29e12945cbd294998c37cc90252b8a7!1-BC575AB8E2AB9833!2195","createdTime":"2017-07-06T10:54:35.777Z","title":"Crypto-js : Javascript <-> node.js 암호화 복호화","createdByAppId":"","links":{"oneNoteEmbedUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2191&parId=BC575AB8E2AB9833!109&wd=target%28%EB%B3%B4%EC%95%88.one%7C0320ce34-4b3c-eb45-88a7-049d75244b31%2FCrypto-js%20%20Javascript%20%3C-%3E%20node.%7C0d359188-3562-b64d-8be2-f6d0ad596e9a%2F%29"},"oneNoteClientUrl":{"href":"onenote:https://d.docs.live.net/bc575ab8e2ab9833/Documents/Security%20Dev/%EB%B3%B4%EC%95%88.one#Crypto-js%20%20Javascript%20%3C-%3E%20node.&section-id=0320ce34-4b3c-eb45-88a7-049d75244b31&page-id=0d359188-3562-b64d-8be2-f6d0ad596e9a&end"},"oneNoteWebUrl":{"href":"https://onedrive.live.com/redir.aspx?cid=bc575ab8e2ab9833&page=edit&resid=BC575AB8E2AB9833!2191&parId=BC575AB8E2AB9833!109&wd=target%28%EB%B3%B4%EC%95%88.one%7C0320ce34-4b3c-eb45-88a7-049d75244b31%2FCrypto-js%20%20Javascript%20%3C-%3E%20node.%7C0d359188-3562-b64d-8be2-f6d0ad596e9a%2F%29"}},"contentUrl":"https://www.onenote.com/api/v1.0/me/notes/pages/0-d29e12945cbd294998c37cc90252b8a7!1-BC575AB8E2AB9833!2195/content","lastModifiedTime":"2017-09-20T09:42:43Z","parentSection@odata.context":"https://www.onenote.com/api/v1.0/$metadata#me/notes/sections('0-BC575AB8E2AB9833%212195')/pages('0-d29e12945cbd294998c37cc90252b8a7%211-BC575AB8E2AB9833%212195')/parentSection(id,name,self)/$entity","parentSection":{"id":"0-BC575AB8E2AB9833!2195","name":"보안","self":"https://www.onenote.com/api/v1.0/me/notes/sections/0-BC575AB8E2AB9833!2195"},"content":"       https://github.com/brix/crypto-js        Javascript    [case 1]        var JsonFormatter = {             stringify: function (cipherParams) { // create json object with ciphertext                 var jsonObj = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) }; // optionally add iv and salt                 if (cipherParams.iv) { jsonObj.iv = cipherParams.iv.toString(); }                 if (cipherParams.salt) { jsonObj.s = cipherParams.salt.toString(); } // stringify json object                 return JSON.stringify(jsonObj);             },             parse: function (jsonStr) { // parse json string                 var jsonObj = JSON.parse(jsonStr); // extract ciphertext from json object, and create cipher params object                 var cipherParams = CryptoJS.lib.CipherParams.create({ ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct) }); // optionally extract iv and salt                 if (jsonObj.iv) { cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv) }                 if (jsonObj.s) { cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s) }                 return cipherParams;             }         };         var encrypted = CryptoJS.AES.encrypt(\"LEt'sgohome\", \"Secret Passphrase\", { format: JsonFormatter });            [case 2]        var encrypted = CryptoJS.AES.encrypt(\"Let'sgohome\", \"Secret Passphrase\");            Node.js    [case 1]        var JsonFormatter = {             stringify: function (cipherParams) { // create json object with ciphertext                 var jsonObj = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) }; // optionally add iv and salt                 if (cipherParams.iv) { jsonObj.iv = cipherParams.iv.toString(); }                 if (cipherParams.salt) { jsonObj.s = cipherParams.salt.toString(); } // stringify json object                 return JSON.stringify(jsonObj);             },             parse: function (jsonStr) { // parse json string                 var jsonObj = JSON.parse(jsonStr); // extract ciphertext from json object, and create cipher params object                 var cipherParams = CryptoJS.lib.CipherParams.create({ ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct) }); // optionally extract iv and salt                 if (jsonObj.iv) { cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv) }                 if (jsonObj.s) { cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s) }                 return cipherParams;             }         };         var decrypted = CryptoJS.AES.decrypt(encrypted, \"Secret Passphrase\", { format: JsonFormatter });     [case 2]        var bytes  = CryptoJS.AES.decrypt(encrypted.toString(), \"Secret Passphrase\");        var decrypted = bytes.toString(CryptoJS.enc.Utf8);                    [res.send : case 1]            return res.send({result: decrypted.toString(CryptoJS.enc.Utf8)});    [res.send : case 2]            return res.send({result: decrypted});               ","html":"\n\t\t<div style=\"position:absolute;left:68px;top:134px;width:702px\">\n\t\t\t<h1 lang=\"en-US\" style=\"font-size:16pt;color:#1e4e79;margin-top:0pt;margin-bottom:0pt\"><a href=\"https://github.com/brix/crypto-js\">https://github.com/brix/crypto-js</a></h1>\n\t\t\t<br>\n\t\t\t<h1 lang=\"en-US\" style=\"font-size:16pt;color:#1e4e79;margin-top:0pt;margin-bottom:0pt\">Javascript</h1>\n\t\t\t<h2 style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">[case 1]</h2>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> var JsonFormatter = {</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> stringify: function (cipherParams) { </span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">// create json object with ciphertext</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> var jsonObj = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) }; </span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">// optionally add iv and salt</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> if (cipherParams.iv) { jsonObj.iv = cipherParams.iv.toString(); }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> if (cipherParams.salt) { jsonObj.s = cipherParams.salt.toString(); }</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\"> // stringify json object</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> return JSON.stringify(jsonObj);</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> },</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> parse: function (jsonStr) { </span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">// parse json string</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> var jsonObj = JSON.parse(jsonStr); </span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">// extract ciphertext from json object, and create cipher params object</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> var cipherParams = CryptoJS.lib.CipherParams.create({ ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct) }); </span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#a8d08d;font-weight:bold\">// optionally extract iv and salt</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> if (jsonObj.iv) { cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv) }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> if (jsonObj.s) { cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s) }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> return cipherParams;</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> };</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545;font-weight:bold\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545;font-weight:bold\"> var encrypted</span><span style=\"font-family:Helvetica Neue;font-size:10pt;color:#454545\"> = CryptoJS.AES.encrypt(&quot;LEt&apos;sgohome&quot;, &quot;Secret Passphrase&quot;, { format: JsonFormatter });</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<h2 style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">[case 2]</h2>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545;font-weight:bold\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545;font-weight:bold\"> var encrypted</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> = CryptoJS.AES.encrypt(&quot;Let&apos;sgohome&quot;, &quot;Secret Passphrase&quot;);</span></p>\n\t\t\t<p lang=\"en-US\" style=\"margin-top:0pt;margin-bottom:0pt\">    </p>\n\t\t\t<h1 lang=\"en-US\" style=\"font-size:16pt;color:#1e4e79;margin-top:0pt;margin-bottom:0pt\">Node.js</h1>\n\t\t\t<h2 style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">[case 1]</h2>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> var JsonFormatter = {</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> stringify: function (cipherParams) { </span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#a8d08d;font-weight:bold\">// create json object with ciphertext</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> var jsonObj = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) };</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#a8d08d;font-weight:bold\"> // optionally add iv and salt</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> if (cipherParams.iv) { jsonObj.iv = cipherParams.iv.toString(); }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> if (cipherParams.salt) { jsonObj.s = cipherParams.salt.toString(); } // stringify json object</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> return JSON.stringify(jsonObj);</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> },</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> parse: function (jsonStr) { // parse json string</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> var jsonObj = JSON.parse(jsonStr); // extract ciphertext from json object, and create cipher params object</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> var cipherParams = CryptoJS.lib.CipherParams.create({ ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct) }); // optionally extract iv and salt</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> if (jsonObj.iv) { cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv) }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> if (jsonObj.s) { cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s) }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> return cipherParams;</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> }</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> };</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545;font-weight:bold\">&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545;font-weight:bold\"> var decrypted</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> = CryptoJS.AES.decrypt(encrypted, &quot;Secret Passphrase&quot;, { format: JsonFormatter });</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<h2 style=\"font-size:14pt;color:#2e75b5;margin-top:0pt;margin-bottom:0pt\">[case 2]</h2>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> var bytes</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> = CryptoJS.AES.decrypt(encrypted.toString(), &quot;Secret Passphrase&quot;);</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> </span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545;font-weight:bold\">var decrypted</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> = bytes.toString(CryptoJS.enc.Utf8);</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;</span><span lang=\"en-US\" style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;</span></p>\n\t\t\t<h3 style=\"font-size:12pt;color:#5b9bd5;margin-top:0pt;margin-bottom:0pt\">[res.send : case 1]</h3>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> return res.send({result: decrypted.toString(CryptoJS.enc.Utf8)});</span></p>\n\t\t\t<h3 style=\"font-size:12pt;color:#5b9bd5;margin-top:0pt;margin-bottom:0pt\">[res.send : case 2]</h3>\n\t\t\t<p style=\"margin-top:0pt;margin-bottom:0pt\"><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span style=\"font-family:Helvetica Neue;font-size:9pt;color:#454545\"> return res.send({result: decrypted});</span></p>\n\t\t\t<br>\n\t\t\t<br>\n\t\t</div>\n\t\n\n"}}}