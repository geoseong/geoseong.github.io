{"version":3,"sources":["webpack:///./src/blogposts/sectionlist.js","webpack:///./src/components/MetaInfo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./util/convert.js"],"names":["inlineStyle","alignRight","textAlign","marginHorizontal","margin","padding","moreBtnArea","marginTop","listItem","borderBottom","alignDomCenter","display","justifyContent","IndexPage","render","pageContext","this","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","type","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_9__","title","section","name","locationAfterOrigin","routing","id","twittercard","keywords","notebook","Fragment","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","toLowerCase","className","page","length","map","item","idx","key","style","getFormmatedDt","lastModifiedTime","datetime","Object","assign","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","domain","MetaInfo","metaDescDom","openDescDom","twitDescDom","description","recurCnt","Math","floor","i","push","content","substring","property","rel","href","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","d","__webpack_exports__","formattedDtBefore","set2Length","val","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"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","file":"component---src-blogposts-sectionlist-js-044f29ad5097cf08e07c.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport routing from '../../postings/routings.json'\nimport { getFormmatedDt } from '../../util/convert'\nimport MetaInfo from '../components/MetaInfo'\n\nconst inlineStyle = {\n  alignRight: {\n    textAlign: 'right'\n  },\n  marginHorizontal: {\n    margin: '0 .5rem',\n    padding: '.3rem 1rem',\n  },\n  moreBtnArea: {\n    marginTop: '.5rem',\n  },\n  listItem: {\n    marginTop: '1rem',\n    padding: '1rem',\n    borderBottom: '1px solid #073642',\n  },\n  alignDomCenter: {\n    margin: '1em 0',\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}\n\nclass IndexPage extends Component {\n  render() {\n    const { props: {pageContext} } = this\n    // console.log('pageContext:', pageContext)\n    return (\n      <Layout type=\"blog\">\n        <MetaInfo \n          title={pageContext.section.name}\n          type=\"website\"\n          locationAfterOrigin={routing[pageContext.section.id]}\n          twittercard=\"summary\"\n          keywords={`${pageContext.notebook},${pageContext.section.name},geoseong,dev note`}\n        />\n        <React.Fragment>\n          <Link to={pageContext.notebook.toLowerCase()}><h5 className=\"\">{pageContext.notebook}</h5></Link>\n          <h1 className=\"text-light\">{pageContext.section.name}</h1>\n          {\n            pageContext.page.length>0 && pageContext.page.map((item, idx) => {\n              return (\n                <div key={'section-'+idx} style={inlineStyle.listItem}>\n                  <Link className=\"card-link\" to={routing[item.id]}>\n                    <div className=\"\">\n                      <h4 className=\"\">{item.title}</h4>\n                      <h6 className=\"text-right\">{getFormmatedDt(item.lastModifiedTime).datetime}</h6>\n                    </div>\n                    <div className=\"geoseong-more-txt\" style={{...inlineStyle.alignRight, ...inlineStyle.moreBtnArea}}>\n                      More...\n                    </div>\n                  </Link>\n                </div>\n              )\n            })\n          }\n          {/* <div style={inlineStyle.alignDomCenter}>\n            <ul class=\"pagination\">\n              <li class=\"page-item disabled\">\n                <a class=\"page-link\" href=\"#\">&laquo;</a>\n              </li>\n              <li class=\"page-item active\">\n                <a class=\"page-link\" href=\"#\">1</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">2</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">3</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">4</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">5</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\">&raquo;</a>\n              </li>\n            </ul>\n          </div> */}\n        </React.Fragment>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo \n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst domain = \"https://geoseong.github.io/\"\nconst pageTitle = 'Geoseong\\'s dev note'\nconst mainIcon = ''\nconst MetaInfo = (props) => {\n  // console.log('MetaInfo props', props)\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (props.description && props.description.length > descriptionLength) {\n    const recurCnt = Math.floor(props.description.length / descriptionLength)\n    for(let i=0; i<recurCnt; i++) {\n      metaDescDom.push(<meta name=\"description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n      openDescDom.push(<meta name=\"og:description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n      twitDescDom.push(<meta name=\"twitter:description\" content={props.description.substring(i*descriptionLength, i*descriptionLength + descriptionLength)} />)\n    }\n  }\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{props.title + ' : ' + pageTitle}</title>\n        {/* open graph */}\n        <meta property=\"og:title\" content={props.title} />\n        {/* <meta property=\"og:description\" content={props.description} /> */}\n        {openDescDom}\n        <meta property=\"og:url\" content={domain + props.locationAfterOrigin} />\n        <meta property=\"og:image\" content={mainIcon} />\n        {/* twitter card */}\n        <meta name=\"twitter:title\" content={props.title} />\n        {/* <meta name=\"twitter:description\" content={props.description} /> */}\n        {twitDescDom}\n        <meta name=\"twitter:card\" content={props.twittercard} />\n        <meta name=\"twitter:domain\" content={domain} />\n        <meta name=\"twitter:url\" content={domain + props.locationAfterOrigin} />\n        {/* description(required) */}\n        {/* <meta name=\"description\" content={props.description} /> */}\n        {metaDescDom}\n        {/* keyword */}\n        <meta name=\"keywords\" content={props.keywords} />\n        {/* canonical */}\n        <link rel=\"canonical\" href={domain + '/'} />\n      </Helmet>\n    </React.Fragment>\n  )\n}\nexport default MetaInfo","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","const getFormmatedDt = (formattedDtBefore) => {\n  let set2Length = (val) => {return (val<10)?\"0\" + val:val;}\n  let date = new Date(formattedDtBefore);\n  let formattedDatetimeAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())} ${set2Length(date.getHours())}:${set2Length(date.getMinutes())}`;\n  let formattedDateAfter = `${date.getFullYear()}-${set2Length(date.getMonth()+1)}-${set2Length(date.getDate())}`;\n  \n  return {datetime: formattedDatetimeAfter, date: formattedDateAfter};\n}\n\nexport {\n  getFormmatedDt\n}"],"sourceRoot":""}