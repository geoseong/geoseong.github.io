{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/MetaInfo.js"],"names":["__webpack_require__","r","__webpack_exports__","_components_Layout__WEBPACK_IMPORTED_MODULE_0__","_components_MetaInfo__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","inlineStyle","wrapper","height","top","left","titleContentSize","space","margin","Index","a","createElement","title","description","type","locationAfterOrigin","twittercard","keywords","className","style","MetaInfo","_ref","createdDt","modifiedDt","ogImage","metaDescDom","openDescDom","twitDescDom","length","recurCnt","Math","floor","i","push","react__WEBPACK_IMPORTED_MODULE_1___default","key","name","content","substring","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","siteUrl","defaultDescription","defaultImage","defaultOgImage","twitterUsername","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","httpEquiv","property","rel","href","data","_public_static_d_3468742975_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-b5bf752e81035179c24c.js","sourcesContent":["import Layout from '../components/Layout'\nimport MetaInfo from '../components/MetaInfo'\nimport React from 'react'\n\nconst inlineStyle = {\n  wrapper: {\n    height: '100vh',\n    top: 0,\n    left: 0,\n  },\n  titleContentSize: {\n    height: '2rem',\n  },\n  space: {\n    margin: '0 .5em',\n  },\n}\nconst Index = () => (\n  <Layout>\n    <MetaInfo\n      title={`Coming soon: geoseong's dev note`}\n      description=\"Full Stack Web Developer Interested in DevOps, new cool things about programming DELL Technical Supporter, IT Operation Helpdesk Staff for 4 years Started as Developer in 2016 learning Java/Spring\"\n      type=\"website\"\n      locationAfterOrigin=\"\"\n      twittercard=\"summary\"\n      keywords={`geoseong, geoseong's dev note`}\n    />\n    <div\n      className=\"align-items-center d-flex h-100 justify-content-center w-100 position-absolute\"\n      style={inlineStyle.wrapper}\n    >\n      <h1 className=\"\">Coming Soon...</h1>\n    </div>\n  </Layout>\n)\n\nexport default Index\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * @name MetaInfo\n * @param {Object} props \n * @description <meta>태그 조합해서 내뱉어주는 컴포넌트\n * @example \n    <MetaInfo\n      title=\"Match Online Manager\"\n      description=\"MOM Index Page\"\n      type=\"website\"\n      locationAfterOrigin=\"/test/\"\n      twittercard=\"summary\"\n      keyword=\"key,word\"\n    />\n * @property {\n    title: <title>, og:title, twitter:title\n    description: og:description, twitter:description\n    type: og:type\n    locationAfterOrigin: host url 이후의 routing주소\n    twittercard: twitter:card\n    keyword: \n }   \n */\nconst MetaInfo = ({\n  description,\n  title,\n  createdDt,\n  modifiedDt,\n  locationAfterOrigin,\n  twittercard,\n  keywords,\n  ogImage,\n}) => {\n  const descriptionLength = 320\n  let metaDescDom = []\n  let openDescDom = []\n  let twitDescDom = []\n  if (description && description.length > descriptionLength) {\n    const recurCnt = Math.floor(description.length / descriptionLength)\n    for (let i = 0; i < recurCnt; i++) {\n      metaDescDom.push(\n        <meta\n          key={'desc-' + i}\n          name=\"description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      openDescDom.push(\n        <meta\n          key={'ogdesc-' + i}\n          name=\"og:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n      twitDescDom.push(\n        <meta\n          key={'twitdesc-' + i}\n          name=\"twitter:description\"\n          content={description.substring(\n            i * descriptionLength,\n            i * descriptionLength + descriptionLength\n          )}\n        />\n      )\n    }\n  }\n  const query = graphql`\n    query SEO2 {\n      site {\n        siteMetadata {\n          defaultTitle: title\n          siteUrl: siteUrl\n          defaultImage: image\n        }\n      }\n    }\n  `\n  return (\n    <StaticQuery\n      query={query}\n      render={({\n        site: {\n          siteMetadata: {\n            defaultTitle,\n            defaultDescription,\n            siteUrl,\n            defaultImage,\n            twitterUsername,\n          },\n        },\n      }) => {\n        const defaultOgImage = `${siteUrl}/${defaultImage}`\n        return (\n          <Helmet>\n            <title>{title + ' : ' + defaultTitle}</title>\n            {/* Last Modified */}\n            <meta name=\"article:author\" content={'geoseong'} />\n            <meta name=\"article:published_time\" content={createdDt} />\n            <meta name=\"article:modified_time\" content={modifiedDt} />\n            <meta name=\"date\" content={modifiedDt} />\n            <meta name=\"last-modified\" content={modifiedDt} />\n            <meta httpEquiv=\"last-modified\" content={modifiedDt} />\n            {/* open graph */}\n            <meta property=\"og:title\" content={title} />\n            {/* og:description */}\n            {openDescDom}\n            <meta\n              property=\"og:url\"\n              content={`${siteUrl}/${locationAfterOrigin}`}\n            />\n            <meta property=\"og:image\" content={ogImage || defaultOgImage} />\n            {/* twitter card */}\n            <meta name=\"twitter:title\" content={title} />\n            {/* twitter:description */}\n            {twitDescDom}\n            <meta name=\"twitter:card\" content={twittercard} />\n            <meta name=\"twitter:domain\" content={siteUrl} />\n            {/* <meta name=\"twitter:domain\" content={`${siteUrl}/${locationAfterOrigin}`} /> */}\n            <meta\n              name=\"twitter:url\"\n              content={`${siteUrl}/${locationAfterOrigin}`}\n            />\n            {/* description(required) */}\n            {metaDescDom}\n            {/* keyword */}\n            <meta name=\"keywords\" content={keywords} />\n            {/* canonical */}\n            <link rel=\"canonical\" href={siteUrl + '/'} />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\nexport default MetaInfo\n"],"sourceRoot":""}